{"ast":null,"code":"import { call, takeLatest } from \"redux-saga/effects\";\nimport { bindAsyncAction } from \"typescript-fsa-redux-saga\";\nimport { getUser, triggerGetUser } from \"./userTypes\";\nimport { UsersService } from \"../../api-client-codegen\";\nimport { showAlert } from \"../../utils/alert\";\nimport { AlertType } from \"../../enum/alert\";\nconst getUserSaga = bindAsyncAction(getUser)(function* () {\n  try {\n    const results = yield call(apiFetch);\n\n    async function apiFetch() {\n      return await UsersService.userBalanceUserBalanceGet();\n    } // showAlert(AlertType.success, 'Success')\n\n\n    return {\n      balance: results\n    };\n  } catch (e) {\n    showAlert(AlertType.error, 'error');\n  }\n});\nexport default function* functionExportSaga() {\n  yield takeLatest(triggerGetUser.type, getUserSaga);\n}","map":{"version":3,"sources":["/Users/nikita/testProjectTabel/src/store/user/userSaga.ts"],"names":["call","takeLatest","bindAsyncAction","getUser","triggerGetUser","UsersService","showAlert","AlertType","getUserSaga","results","apiFetch","userBalanceUserBalanceGet","balance","e","error","functionExportSaga","type"],"mappings":"AAAA,SACIA,IADJ,EAEIC,UAFJ,QAGO,oBAHP;AAKA,SAASC,eAAT,QAAgC,2BAAhC;AACA,SAASC,OAAT,EAAkBC,cAAlB,QAAwC,aAAxC;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,MAAMC,WAAW,GAAGN,eAAe,CAACC,OAAD,CAAf,CAAyB,aAA2B;AACpE,MAAI;AACA,UAAMM,OAAO,GAAG,MAAMT,IAAI,CAACU,QAAD,CAA1B;;AACA,mBAAeA,QAAf,GAA2B;AACvB,aAAO,MAAML,YAAY,CAACM,yBAAb,EAAb;AACH,KAJD,CAKA;;;AACA,WAAO;AAACC,MAAAA,OAAO,EAAEH;AAAV,KAAP;AACH,GAPD,CAOE,OAAOI,CAAP,EAAU;AACRP,IAAAA,SAAS,CAACC,SAAS,CAACO,KAAX,EAAkB,OAAlB,CAAT;AACH;AACJ,CAXmB,CAApB;AAaA,eAAe,UAAUC,kBAAV,GAAgC;AAC3C,QAAMd,UAAU,CAACG,cAAc,CAACY,IAAhB,EAAsBR,WAAtB,CAAhB;AACH","sourcesContent":["import {\n    call,\n    takeLatest,\n} from \"redux-saga/effects\";\nimport { SagaIterator } from \"redux-saga\";\nimport { bindAsyncAction } from \"typescript-fsa-redux-saga\";\nimport { getUser, triggerGetUser } from \"./userTypes\";\nimport { UsersService } from \"../../api-client-codegen\";\nimport { showAlert } from \"../../utils/alert\";\nimport { AlertType } from \"../../enum/alert\";\n\nconst getUserSaga = bindAsyncAction(getUser)(function* (): SagaIterator {\n    try {\n        const results = yield call(apiFetch);\n        async function apiFetch () {\n            return await UsersService.userBalanceUserBalanceGet()\n        }\n        // showAlert(AlertType.success, 'Success')\n        return {balance: results} \n    } catch (e) {\n        showAlert(AlertType.error, 'error')\n    }\n});\n\nexport default function* functionExportSaga () {\n    yield takeLatest(triggerGetUser.type, getUserSaga);\n}\n"]},"metadata":{},"sourceType":"module"}