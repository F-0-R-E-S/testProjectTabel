{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/testProjectTabel/src/modules/main/components/mainTabel.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMemo } from \"react\";\nimport { useTable } from \"react-table\";\nimport { format } from \"date-fns\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainTabel = _ref => {\n  _s();\n\n  let {\n    users\n  } = _ref;\n  const data = useMemo(() => users, [users]);\n  const columns = useMemo(() => [{\n    Header: 'ID',\n    accessor: 'ID',\n    // accessor is the \"key\" in the data\n    width: 130\n  }, {\n    Header: 'Имя',\n    accessor: 'FirstName',\n    // accessor is the \"key\" in the data\n    Cell: _ref2 => {\n      let {\n        value\n      } = _ref2;\n      return value.length > 8 ? value.slice(0, 10) + '...' : value;\n    }\n  }, {\n    Header: 'Город',\n    accessor: 'City' // accessor is the \"key\" in the data\n\n  }, {\n    Header: 'Активность роботов (кол-во)',\n    accessor: 'Orientation',\n    // accessor is the \"key\" in the data\n    Cell: _ref3 => {\n      let {\n        value\n      } = _ref3;\n      return `активно (${value})`;\n    }\n  }, {\n    Header: 'Сумма счетов',\n    accessor: 'ScansInPeriod' // accessor is the \"key\" in the data\n\n  }, {\n    Header: 'Прибыль',\n    accessor: 'VIP' // accessor is the \"key\" in the data\n\n  }, {\n    Header: 'Дата регистрации',\n    accessor: 'CreatedAt',\n    // accessor is the \"key\" in the data\n    Cell: _ref4 => {\n      let {\n        value\n      } = _ref4;\n      return format(new Date(value), `dd.MM.yyyy`);\n    }\n  }, {\n    Header: 'Комиссия',\n    accessor: 'Ban' // accessor is the \"key\" in the data\n\n  }, {\n    Header: 'Статус плательщика',\n    accessor: 'State' // accessor is the \"key\" in the data\n\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return /*#__PURE__*/_jsxDEV(Tabel, { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(TabelHeader, {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(TabelHeaderItem, { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(TabelHeaderItemTh, { ...column.getHeaderProps(),\n          children: [\" \", column.render('Header'), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TabelBody, { ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(TabelBodyItem, { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(TabelBodyItemTd, { ...cell.getCellProps(),\n              children: [\" \", cell.render('Cell')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MainTabel, \"8jX+zWtVJG3zYUjUH1dOsSE4wfs=\", false, function () {\n  return [useTable];\n});\n\n_c = MainTabel;\nconst Tabel = styled.table`\n    width: 100%;\n`;\n_c2 = Tabel;\nconst TabelBody = styled.tbody`\n\n`;\n_c3 = TabelBody;\nconst TabelBodyItem = styled.tr`\n\n`;\n_c4 = TabelBodyItem;\nconst TabelBodyItemTd = styled.td`\nfont-family: 'Gilroy Bold';\nfont-style: normal;\nfont-weight: 700;\nfont-size: 15px;\ntext-align: left;\ncolor: #000000;\npadding: 28px 10px;\n`;\n_c5 = TabelBodyItemTd;\nconst TabelHeader = styled.thead`\nborder: 1px dashed #E1E6EC;\npadding: 11px 33px;\n`;\n_c6 = TabelHeader;\nconst TabelHeaderItem = styled.tr`\n\n`;\n_c7 = TabelHeaderItem;\nconst TabelHeaderItemTh = styled.th`\nfont-family: 'Gilroy Bold';\nfont-style: normal;\nfont-weight: 700;\nfont-size: 12px;\nline-height: 15px;\ntext-align: left;\ntext-transform: uppercase;\ncolor: #B5B5C3;\nborder-bottom: 1px dashed #E1E6EC;\npadding-bottom: 11px;\npadding-top: 33px;\npadding-left: 10px;\npadding-right: 10px;\n`;\n_c8 = TabelHeaderItemTh;\nexport default MainTabel;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"MainTabel\");\n$RefreshReg$(_c2, \"Tabel\");\n$RefreshReg$(_c3, \"TabelBody\");\n$RefreshReg$(_c4, \"TabelBodyItem\");\n$RefreshReg$(_c5, \"TabelBodyItemTd\");\n$RefreshReg$(_c6, \"TabelHeader\");\n$RefreshReg$(_c7, \"TabelHeaderItem\");\n$RefreshReg$(_c8, \"TabelHeaderItemTh\");","map":{"version":3,"sources":["/Users/nikita/testProjectTabel/src/modules/main/components/mainTabel.tsx"],"names":["useMemo","useTable","format","styled","MainTabel","users","data","columns","Header","accessor","width","Cell","value","length","slice","Date","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","Tabel","table","TabelBody","tbody","TabelBodyItem","tr","TabelBodyItemTd","td","TabelHeader","thead","TabelHeaderItem","TabelHeaderItemTh","th"],"mappings":"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","sourcesContent":["import { useMemo } from \"react\"\nimport { useTable } from \"react-table\"\nimport { format } from \"date-fns\";\nimport styled from \"styled-components\";\n\ntype Props = {\n    users: any\n}\n\nconst MainTabel = ({ users }: Props) => {\n\n    const data = useMemo(\n        () => users,\n        [users])\n\n    const columns: any = useMemo(\n        () => [\n            {\n                Header: 'ID',\n                accessor: 'ID', // accessor is the \"key\" in the data\n                width: 130,\n            },\n            {\n                Header: 'Имя',\n                accessor: 'FirstName', // accessor is the \"key\" in the data\n                Cell: ({ value }: any) => value.length > 8 ? value.slice(0, 10) + '...' : value\n            },\n            {\n                Header: 'Город',\n                accessor: 'City', // accessor is the \"key\" in the data\n            },\n            {\n                Header: 'Активность роботов (кол-во)',\n                accessor: 'Orientation', // accessor is the \"key\" in the data\n                Cell: ({ value }: any) => `активно (${value})`\n            },\n            {\n                Header: 'Сумма счетов',\n                accessor: 'ScansInPeriod', // accessor is the \"key\" in the data\n            },\n            {\n                Header: 'Прибыль',\n                accessor: 'VIP', // accessor is the \"key\" in the data\n            },\n            {\n                Header: 'Дата регистрации',\n                accessor: 'CreatedAt', // accessor is the \"key\" in the data\n                Cell: ({ value }: any) => format(new Date(value), `dd.MM.yyyy`)\n            },\n            {\n                Header: 'Комиссия',\n                accessor: 'Ban', // accessor is the \"key\" in the data\n            },\n            {\n                Header: 'Статус плательщика',\n                accessor: 'State', // accessor is the \"key\" in the data\n            },\n        ],\n        []\n    )\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n    } = useTable({ columns, data })\n\n    return (\n        <Tabel {...getTableProps()}>\n            <TabelHeader>\n                {headerGroups.map(headerGroup => (\n                    <TabelHeaderItem {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map(column => (\n                            <TabelHeaderItemTh {...column.getHeaderProps()}> {column.render('Header')} </TabelHeaderItemTh>\n                        ))}\n                    </TabelHeaderItem>\n                ))}\n            </TabelHeader>\n            <TabelBody {...getTableBodyProps()}>\n                {rows.map(row => {\n                    prepareRow(row)\n                    return (\n                        <TabelBodyItem {...row.getRowProps()}>\n                            {row.cells.map(cell => {\n                                return (\n                                    <TabelBodyItemTd {...cell.getCellProps()}> {cell.render('Cell')}</TabelBodyItemTd>\n                                )\n                            })}\n                        </TabelBodyItem>\n                    )\n                })}\n            </TabelBody>\n        </Tabel>\n    )\n}\n\n\nconst Tabel = styled.table`\n    width: 100%;\n`;\n\nconst TabelBody = styled.tbody`\n\n`;\n\nconst TabelBodyItem = styled.tr`\n\n`;\n\nconst TabelBodyItemTd = styled.td`\nfont-family: 'Gilroy Bold';\nfont-style: normal;\nfont-weight: 700;\nfont-size: 15px;\ntext-align: left;\ncolor: #000000;\npadding: 28px 10px;\n`;\n\nconst TabelHeader = styled.thead`\nborder: 1px dashed #E1E6EC;\npadding: 11px 33px;\n`;\n\nconst TabelHeaderItem = styled.tr`\n\n`;\n\nconst TabelHeaderItemTh = styled.th`\nfont-family: 'Gilroy Bold';\nfont-style: normal;\nfont-weight: 700;\nfont-size: 12px;\nline-height: 15px;\ntext-align: left;\ntext-transform: uppercase;\ncolor: #B5B5C3;\nborder-bottom: 1px dashed #E1E6EC;\npadding-bottom: 11px;\npadding-top: 33px;\npadding-left: 10px;\npadding-right: 10px;\n`;\n\n\nexport default MainTabel\n"]},"metadata":{},"sourceType":"module"}