{"ast":null,"code":"import { call, // put,\ntakeLatest } from \"redux-saga/effects\";\nimport { bindAsyncAction } from \"typescript-fsa-redux-saga\";\nimport { getUser, getUsers, triggerGetUser, triggerGetUsers } from \"./userTypes\";\nimport axios from \"axios\";\nconst getUserSaga = bindAsyncAction(getUser)(function* () {\n  try {\n    const results = yield call(apiFetch);\n\n    async function apiFetch() {\n      const config = {\n        headers: {\n          \"X-User-Id\": `Auth0User`,\n          \"X-Org-Id\": `Auth0Org`\n        }\n      };\n      const data = {// \"Page\": 70,\n        // \"PerPage\": 20\n      };\n      return await axios.post(`https://test-unified.client-api.vyyer.id/api/v2/scans/get`, data, config).then(response => {\n        return response.data.Data.map(item => {\n          return {\n            IdentityID: item.IdentityID,\n            id: item.ID\n          };\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    } //  yield put(triggerGetUsers(results))\n\n\n    return {\n      usersId: results.reverse()\n    };\n  } catch (e) {\n    console.log('error');\n  }\n});\nconst getUsersSaga = bindAsyncAction(getUsers)(function* (_ref) {\n  let {\n    payload\n  } = _ref;\n  console.log(payload);\n  const data = payload.map(item => item.IdentityID);\n\n  try {\n    const results = yield call(apiFetch);\n\n    async function apiFetch() {// const config = {\n      //     headers: {\n      //         \"X-User-Id\": `Auth0User`,\n      //         \"X-Org-Id\": `Auth0Org`,\n      //     },\n      // };\n      // const data = {\n      //     \"IDs\": payload,\n      // };\n      // return await axios\n      //     .post(`https://test-unified.client-api.vyyer.id/api/v2/identities/get`, data, config)\n      //     .then((response) => {\n      //         return response.data.Data\n      //     }).catch((error) => {\n      //         console.log(error)\n      //     });\n    }\n\n    return {\n      users: results\n    };\n  } catch (e) {\n    console.log('error');\n  }\n});\nexport default function* functionExportSaga() {\n  yield takeLatest(triggerGetUser.type, getUserSaga);\n  yield takeLatest(triggerGetUsers.type, getUsersSaga);\n}","map":{"version":3,"sources":["/Users/nikita/testProjectTabel/src/store/user/userSaga.ts"],"names":["call","takeLatest","bindAsyncAction","getUser","getUsers","triggerGetUser","triggerGetUsers","axios","getUserSaga","results","apiFetch","config","headers","data","post","then","response","Data","map","item","IdentityID","id","ID","catch","error","console","log","usersId","reverse","e","getUsersSaga","payload","users","functionExportSaga","type"],"mappings":"AAAA,SACIA,IADJ,EAEI;AACAC,UAHJ,QAIO,oBAJP;AAMA,SAASC,eAAT,QAAgC,2BAAhC;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,cAA5B,EAA4CC,eAA5C,QAAmE,aAAnE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,MAAMC,WAAW,GAAGN,eAAe,CAACC,OAAD,CAAf,CAAyB,aAA2B;AACpE,MAAI;AACA,UAAMM,OAAO,GAAG,MAAMT,IAAI,CAACU,QAAD,CAA1B;;AACA,mBAAeA,QAAf,GAA0B;AACtB,YAAMC,MAAM,GAAG;AACXC,QAAAA,OAAO,EAAE;AACL,uBAAc,WADT;AAEL,sBAAa;AAFR;AADE,OAAf;AAOA,YAAMC,IAAI,GAAG,CACT;AACA;AAFS,OAAb;AAKA,aAAO,MAAMN,KAAK,CACbO,IADQ,CACF,2DADE,EAC0DD,IAD1D,EACgEF,MADhE,EAERI,IAFQ,CAEFC,QAAD,IAAc;AAChB,eAAOA,QAAQ,CAACH,IAAT,CAAcI,IAAd,CAAmBC,GAAnB,CAAwBC,IAAD,IAAe;AAAE,iBAAO;AAAEC,YAAAA,UAAU,EAAED,IAAI,CAACC,UAAnB;AAA+BC,YAAAA,EAAE,EAAEF,IAAI,CAACG;AAAxC,WAAP;AAAqD,SAA7F,CAAP;AACH,OAJQ,EAINC,KAJM,CAICC,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OANQ,CAAb;AAOH,KAtBD,CAuBA;;;AACA,WAAO;AAAEG,MAAAA,OAAO,EAAElB,OAAO,CAACmB,OAAR;AAAX,KAAP;AACH,GAzBD,CAyBE,OAAOC,CAAP,EAAU;AACRJ,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;AACJ,CA7BmB,CAApB;AA+BA,MAAMI,YAAY,GAAG5B,eAAe,CAACE,QAAD,CAAf,CAA0B,iBAAsC;AAAA,MAA3B;AAAE2B,IAAAA;AAAF,GAA2B;AACjFN,EAAAA,OAAO,CAACC,GAAR,CAAYK,OAAZ;AACA,QAAMlB,IAAI,GAAGkB,OAAO,CAACb,GAAR,CAAaC,IAAD,IAASA,IAAI,CAACC,UAA1B,CAAb;;AACA,MAAI;AACA,UAAMX,OAAO,GAAG,MAAMT,IAAI,CAACU,QAAD,CAA1B;;AACA,mBAAeA,QAAf,GAA0B,CACtB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AACD,WAAO;AAAEsB,MAAAA,KAAK,EAAEvB;AAAT,KAAP;AACH,GAvBD,CAuBE,OAAOoB,CAAP,EAAU;AACRJ,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;AACJ,CA7BoB,CAArB;AA+BA,eAAe,UAAUO,kBAAV,GAA+B;AAC1C,QAAMhC,UAAU,CAACI,cAAc,CAAC6B,IAAhB,EAAsB1B,WAAtB,CAAhB;AACA,QAAMP,UAAU,CAACK,eAAe,CAAC4B,IAAjB,EAAuBJ,YAAvB,CAAhB;AAGH","sourcesContent":["import {\n    call,\n    // put,\n    takeLatest,\n} from \"redux-saga/effects\";\nimport { SagaIterator } from \"redux-saga\";\nimport { bindAsyncAction } from \"typescript-fsa-redux-saga\";\nimport { getUser, getUsers, triggerGetUser, triggerGetUsers } from \"./userTypes\";\nimport axios from \"axios\";\n\n\nconst getUserSaga = bindAsyncAction(getUser)(function* (): SagaIterator {\n    try {\n        const results = yield call(apiFetch);\n        async function apiFetch() {\n            const config = {\n                headers: {\n                    \"X-User-Id\": `Auth0User`,\n                    \"X-Org-Id\": `Auth0Org`,\n                },\n            };\n\n            const data = {\n                // \"Page\": 70,\n                // \"PerPage\": 20\n            };\n\n            return await axios\n                .post(`https://test-unified.client-api.vyyer.id/api/v2/scans/get`, data, config)\n                .then((response) => {\n                    return response.data.Data.map((item: any) => { return { IdentityID: item.IdentityID, id: item.ID } });\n                }).catch((error) => {\n                    console.log(error)\n                });\n        }\n        //  yield put(triggerGetUsers(results))\n        return { usersId: results.reverse() }\n    } catch (e) {\n        console.log('error')\n    }\n});\n\nconst getUsersSaga = bindAsyncAction(getUsers)(function* ({ payload }): SagaIterator {\n    console.log(payload)\n    const data = payload.map((item)=> item.IdentityID)\n    try {\n        const results = yield call(apiFetch);\n        async function apiFetch() {\n            // const config = {\n            //     headers: {\n            //         \"X-User-Id\": `Auth0User`,\n            //         \"X-Org-Id\": `Auth0Org`,\n            //     },\n            // };\n\n            // const data = {\n            //     \"IDs\": payload,\n            // };\n\n            // return await axios\n            //     .post(`https://test-unified.client-api.vyyer.id/api/v2/identities/get`, data, config)\n            //     .then((response) => {\n            //         return response.data.Data\n            //     }).catch((error) => {\n            //         console.log(error)\n            //     });\n        }\n        return { users: results }\n    } catch (e) {\n        console.log('error')\n    }\n});\n\nexport default function* functionExportSaga() {\n    yield takeLatest(triggerGetUser.type, getUserSaga);\n    yield takeLatest(triggerGetUsers.type, getUsersSaga);\n\n\n}\n"]},"metadata":{},"sourceType":"module"}