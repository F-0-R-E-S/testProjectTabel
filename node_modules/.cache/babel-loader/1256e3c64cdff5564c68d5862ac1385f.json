{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/testProjectTabel/src/route.tsx\";\nimport React from 'react';\nimport { Routes, Route } from \"react-router-dom\";\nimport { Layout } from './layout/layout';\nimport { TrainingLayout } from './layout/trainingLayout';\nimport Main from './pages/main/mainPage';\nimport TrainingData from './pages/trainingData/trainingDataPage';\nimport TrainingDataSets from './pages/trainingDataSets/trainingDataSetsPage';\nimport Training from './pages/training/trainingPage';\nimport TrainingRaster from './pages/trainingVector/trainingVectorPage';\nimport ResultViewing from './pages/resultViewing/resultViewingPage';\nimport AnnotationEdit from './pages/annotationEdit/annotationEditPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RoutesSPA = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 34\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"resultViewing/:id/:signature\",\n          element: /*#__PURE__*/_jsxDEV(ResultViewing, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"annotationEdit/:rasterId/:vectorId\",\n          element: /*#__PURE__*/_jsxDEV(AnnotationEdit, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 69\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"data\",\n          element: /*#__PURE__*/_jsxDEV(TrainingLayout, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 39\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"images\",\n            element: /*#__PURE__*/_jsxDEV(TrainingData, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"annotated-images\",\n            element: /*#__PURE__*/_jsxDEV(TrainingRaster, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"datasets\",\n            element: /*#__PURE__*/_jsxDEV(TrainingDataSets, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"training\",\n            element: /*#__PURE__*/_jsxDEV(Training, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = RoutesSPA;\nexport default RoutesSPA;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoutesSPA\");","map":{"version":3,"sources":["/Users/nikita/testProjectTabel/src/route.tsx"],"names":["React","Routes","Route","Layout","TrainingLayout","Main","TrainingData","TrainingDataSets","Training","TrainingRaster","ResultViewing","AnnotationEdit","RoutesSPA"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,KAFF,QAGO,kBAHP;AAIA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,gBAAP,MAA6B,+CAA7B;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,cAAP,MAA2B,2CAA3B;AACA,OAAOC,aAAP,MAA0B,yCAA1B;AACA,OAAOC,cAAP,MAA2B,2CAA3B;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,OAAO,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAAzB;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAtB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,8BAAZ;AAA2C,UAAA,OAAO,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAApD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,oCAAZ;AAAiD,UAAA,OAAO,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAA1D;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,OAAO,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,kBAA5B;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,OAAO,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,kBAAZ;AAA+B,YAAA,OAAO,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAxC;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,OAAO,eAAE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAiBD,CAlBD;;KAAMA,S;AAoBN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport {\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport { Layout } from './layout/layout';\nimport { TrainingLayout } from './layout/trainingLayout';\nimport Main from './pages/main/mainPage';\nimport TrainingData from './pages/trainingData/trainingDataPage';\nimport TrainingDataSets from './pages/trainingDataSets/trainingDataSetsPage';\nimport Training from './pages/training/trainingPage';\nimport TrainingRaster from './pages/trainingVector/trainingVectorPage';\nimport ResultViewing from './pages/resultViewing/resultViewingPage';\nimport AnnotationEdit from './pages/annotationEdit/annotationEditPage';\n\nconst RoutesSPA = () => {\n  return (\n    <>\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route index element={<Main />} />\n          <Route path=\"resultViewing/:id/:signature\" element={<ResultViewing/>}/>\n          <Route path=\"annotationEdit/:rasterId/:vectorId\" element={<AnnotationEdit/>}/>\n          <Route path=\"data\" element={<TrainingLayout />}>\n            <Route path=\"images\" element={<TrainingData />}/>\n            <Route path=\"annotated-images\" element={<TrainingRaster />}/>\n            <Route path=\"datasets\" element={<TrainingDataSets />}/>\n            <Route path=\"training\" element={<Training />}/>\n          </Route>\n        </Route>\n      </Routes>\n    </>\n  );\n}\n\nexport default RoutesSPA\n"]},"metadata":{},"sourceType":"module"}