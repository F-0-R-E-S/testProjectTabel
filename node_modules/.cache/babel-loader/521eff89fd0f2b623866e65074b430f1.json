{"ast":null,"code":"import { call, takeLatest } from \"redux-saga/effects\";\nimport { bindAsyncAction } from \"typescript-fsa-redux-saga\";\nimport { getUser, triggerGetUser } from \"./userTypes\";\nconst getUserSaga = bindAsyncAction(getUser)(function* () {\n  try {\n    const results = yield call(apiFetch);\n\n    async function apiFetch() {\n      let response = await fetch('https://test-unified.client-api.vyyer.id/api/v2/scans');\n\n      if (response.ok) {\n        let json = await response.json();\n        console.log(json);\n      } else {\n        alert(\"Ошибка HTTP: \" + response.status);\n      }\n    }\n\n    return {\n      balance: results\n    };\n  } catch (e) {\n    console.log('error');\n  }\n});\nexport default function* functionExportSaga() {\n  yield takeLatest(triggerGetUser.type, getUserSaga);\n}","map":{"version":3,"sources":["/Users/nikita/testProjectTabel/src/store/user/userSaga.ts"],"names":["call","takeLatest","bindAsyncAction","getUser","triggerGetUser","getUserSaga","results","apiFetch","response","fetch","ok","json","console","log","alert","status","balance","e","functionExportSaga","type"],"mappings":"AAAA,SACIA,IADJ,EAEIC,UAFJ,QAGO,oBAHP;AAKA,SAASC,eAAT,QAAgC,2BAAhC;AACA,SAASC,OAAT,EAAkBC,cAAlB,QAAwC,aAAxC;AAGA,MAAMC,WAAW,GAAGH,eAAe,CAACC,OAAD,CAAf,CAAyB,aAA2B;AACpE,MAAI;AACA,UAAMG,OAAO,GAAG,MAAMN,IAAI,CAACO,QAAD,CAA1B;;AACA,mBAAeA,QAAf,GAA0B;AACtB,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uDAAD,CAA1B;;AAEA,UAAID,QAAQ,CAACE,EAAb,EAAiB;AACb,YAAIC,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAT,EAAjB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,OAHD,MAGO;AACHG,QAAAA,KAAK,CAAC,kBAAkBN,QAAQ,CAACO,MAA5B,CAAL;AACH;AACJ;;AACD,WAAO;AAAEC,MAAAA,OAAO,EAAEV;AAAX,KAAP;AACH,GAbD,CAaE,OAAOW,CAAP,EAAU;AACRL,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;AACJ,CAjBmB,CAApB;AAmBA,eAAe,UAAUK,kBAAV,GAA+B;AAC1C,QAAMjB,UAAU,CAACG,cAAc,CAACe,IAAhB,EAAsBd,WAAtB,CAAhB;AACH","sourcesContent":["import {\n    call,\n    takeLatest,\n} from \"redux-saga/effects\";\nimport { SagaIterator } from \"redux-saga\";\nimport { bindAsyncAction } from \"typescript-fsa-redux-saga\";\nimport { getUser, triggerGetUser } from \"./userTypes\";\n\n\nconst getUserSaga = bindAsyncAction(getUser)(function* (): SagaIterator {\n    try {\n        const results = yield call(apiFetch);\n        async function apiFetch() {\n            let response = await fetch('https://test-unified.client-api.vyyer.id/api/v2/scans');\n\n            if (response.ok) {\n                let json = await response.json();\n                console.log(json)\n            } else {\n                alert(\"Ошибка HTTP: \" + response.status);\n            }\n        }\n        return { balance: results }\n    } catch (e) {\n        console.log('error')\n    }\n});\n\nexport default function* functionExportSaga() {\n    yield takeLatest(triggerGetUser.type, getUserSaga);\n}\n"]},"metadata":{},"sourceType":"module"}