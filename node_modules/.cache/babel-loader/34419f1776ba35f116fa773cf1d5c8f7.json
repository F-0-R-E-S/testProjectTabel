{"ast":null,"code":"import { reducerWithInitialState } from \"typescript-fsa-reducers\";\nimport produce from \"immer\";\nimport { getUser } from \"./userTypes\";\nconst INITIAL_STATE = {\n  loading: false,\n  balance: {\n    user_id: \"0\",\n    balance: 0\n  }\n};\nexport default reducerWithInitialState(INITIAL_STATE).cases([getUser.started], state => ({ ...state,\n  loading: true\n})).case(getUser.done, (state, action) => {\n  console.log(action);\n  return produce(state, draft => {\n    if (action.result) {\n      draft.balance = action.result.balance;\n    }\n\n    draft.loading = false;\n    return draft;\n  });\n});","map":{"version":3,"sources":["/Users/nikita/testProjectTabel/src/store/user/userReducer.ts"],"names":["reducerWithInitialState","produce","getUser","INITIAL_STATE","loading","balance","user_id","cases","started","state","case","done","action","console","log","draft","result"],"mappings":"AAAA,SAASA,uBAAT,QAAwC,yBAAxC;AACA,OAAOC,OAAP,MAAoB,OAApB;AACA,SAASC,OAAT,QAAuC,aAAvC;AAEE,MAAMC,aAA4B,GAAG;AACnCC,EAAAA,OAAO,EAAE,KAD0B;AAEnCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAE,GADJ;AAELD,IAAAA,OAAO,EAAE;AAFJ;AAF0B,CAArC;AAQA,eAAeL,uBAAuB,CAACG,aAAD,CAAvB,CACdI,KADc,CAEb,CACEL,OAAO,CAACM,OADV,CAFa,EAKZC,KAAD,KAAY,EACV,GAAGA,KADO;AAEVL,EAAAA,OAAO,EAAE;AAFC,CAAZ,CALa,EAUdM,IAVc,CAUTR,OAAO,CAACS,IAVC,EAUK,CAACF,KAAD,EAAQG,MAAR,KAAmB;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,SAAOX,OAAO,CAACQ,KAAD,EAASM,KAAD,IAAW;AAC/B,QAAIH,MAAM,CAACI,MAAX,EAAmB;AACjBD,MAAAA,KAAK,CAACV,OAAN,GAAgBO,MAAM,CAACI,MAAP,CAAcX,OAA9B;AACD;;AACDU,IAAAA,KAAK,CAACX,OAAN,GAAgB,KAAhB;AACA,WAAOW,KAAP;AACD,GANa,CAAd;AAOD,CAnBc,CAAf","sourcesContent":["import { reducerWithInitialState } from \"typescript-fsa-reducers\";\nimport produce from \"immer\";\nimport { getUser, UserStateType } from \"./userTypes\";\n\n  const INITIAL_STATE: UserStateType = {\n    loading: false,\n    balance: {\n        user_id: \"0\",\n        balance: 0,\n    },\n  };\n\n  export default reducerWithInitialState(INITIAL_STATE)\n  .cases(\n    [\n      getUser.started,\n    ],\n    (state) => ({\n      ...state,\n      loading: true,\n    })\n  )\n  .case(getUser.done, (state, action) => {\n    console.log(action)\n    return produce(state, (draft) => { \n      if (action.result) {\n        draft.balance = action.result.balance;\n      }\n      draft.loading = false;\n      return draft;\n    });\n  });\n"]},"metadata":{},"sourceType":"module"}