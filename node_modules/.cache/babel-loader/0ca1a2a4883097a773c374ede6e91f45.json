{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/testProjectTabel/src/provider/AxiosProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nexport const AxiosContext = /*#__PURE__*/React.createContext(axios);\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AxiosProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  console.log(\"CALL!\");\n  const {\n    getAccessTokenSilently\n  } = useAuth0();\n  axios.interceptors.request.use(async config => {\n    const accessToken = await getAccessTokenSilently(); // const accessToken = 'ABCD'\n\n    console.log(`TOKEN: ${accessToken}`);\n    config.headers.common.Authorization = `Bearer ${accessToken}`;\n    return config;\n  });\n  return /*#__PURE__*/_jsxDEV(AxiosContext.Provider, {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AxiosProvider, \"CjK7BFNClETg9lh73Dg96CqYMjU=\", false, function () {\n  return [useAuth0];\n});\n\n_c = AxiosProvider;\nAxiosProvider.defaultProps = {};\nAxiosProvider.propTypes = {\n  // getAccessTokenSilently: PropTypes.func.isRequired,\n  // instance: PropTypes.func.isRequired,\n  children: PropTypes.any.isRequired\n};\nexport default AxiosProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AxiosProvider\");","map":{"version":3,"sources":["/Users/nikita/testProjectTabel/src/provider/AxiosProvider.jsx"],"names":["React","PropTypes","axios","AxiosContext","createContext","useAuth0","AxiosProvider","children","console","log","getAccessTokenSilently","interceptors","request","use","config","accessToken","headers","common","Authorization","defaultProps","propTypes","any","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,gBAAGH,KAAK,CAACI,aAAN,CAAoBF,KAApB,CAArB;AACP,SAASG,QAAT,QAAyB,oBAAzB;;;AAEA,MAAMC,aAAa,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,QAAM;AAAEC,IAAAA;AAAF,MAA6BL,QAAQ,EAA3C;AACAH,EAAAA,KAAK,CAACS,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAAgC,MAAOC,MAAP,IAAkB;AAChD,UAAMC,WAAW,GAAG,MAAML,sBAAsB,EAAhD,CADgD,CAEhD;;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAa,UAASM,WAAY,EAAlC;AACAD,IAAAA,MAAM,CAACE,OAAP,CAAeC,MAAf,CAAsBC,aAAtB,GAAuC,UAASH,WAAY,EAA5D;AACA,WAAOD,MAAP;AACD,GAND;AAQA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAA,cACGP;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhBD;;GAAMD,a;UAE+BD,Q;;;KAF/BC,a;AAkBNA,aAAa,CAACa,YAAd,GAA6B,EAA7B;AAGAb,aAAa,CAACc,SAAd,GAA0B;AACxB;AACA;AACAb,EAAAA,QAAQ,EAAEN,SAAS,CAACoB,GAAV,CAAcC;AAHA,CAA1B;AAMA,eAAehB,aAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport axios from 'axios'\n\nexport const AxiosContext = React.createContext(axios)\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst AxiosProvider = ({children}) => {\n  console.log(\"CALL!\");\n  const { getAccessTokenSilently } = useAuth0();\n  axios.interceptors.request.use( async (config) => {            \n    const accessToken = await getAccessTokenSilently();\n    // const accessToken = 'ABCD'\n    console.log(`TOKEN: ${accessToken}`);\n    config.headers.common.Authorization = `Bearer ${accessToken}`\n    return config;\n  })\n\n  return(\n    <AxiosContext.Provider>\n      {children}\n    </AxiosContext.Provider>\n  )\n}\n\nAxiosProvider.defaultProps = {\n}\n\nAxiosProvider.propTypes = {\n  // getAccessTokenSilently: PropTypes.func.isRequired,\n  // instance: PropTypes.func.isRequired,\n  children: PropTypes.any.isRequired,\n}\n\nexport default AxiosProvider"]},"metadata":{},"sourceType":"module"}