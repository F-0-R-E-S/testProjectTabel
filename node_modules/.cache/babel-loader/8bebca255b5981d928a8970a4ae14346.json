{"ast":null,"code":"import { useState, useCallback, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event.js';\n\nfunction useLocalStorageValue(_ref) {\n  let {\n    key,\n    defaultValue = void 0\n  } = _ref;\n  const [value, setValue] = useState(typeof window !== \"undefined\" && \"localStorage\" in window ? window.localStorage.getItem(key) : defaultValue != null ? defaultValue : \"\");\n  const setLocalStorageValue = useCallback(val => {\n    if (typeof val === \"function\") {\n      setValue(current => {\n        const result = val(current);\n        window.localStorage.setItem(key, result);\n        return result;\n      });\n    } else {\n      window.localStorage.setItem(key, val);\n      setValue(val);\n    }\n  }, [key]);\n  useWindowEvent(\"storage\", event => {\n    if (event.storageArea === window.localStorage && event.key === key) {\n      setValue(event.newValue);\n    }\n  });\n  useEffect(() => {\n    if (defaultValue && !value) {\n      setLocalStorageValue(defaultValue);\n    }\n  }, [defaultValue, value, setLocalStorageValue]);\n  return [value || defaultValue, setLocalStorageValue];\n}\n\nexport { useLocalStorageValue };","map":{"version":3,"mappings":";;;AAEO,SAASA,oBAAT,OAGJ;AAAA,MAHkC;AACnCC,OADmC;AAEnCC,gBAAY,GAAG,KAAK;AAFe,GAGlC;AACD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,OAAOC,MAAP,KAAkB,WAAlB,IAAiC,kBAAkBA,MAAnD,GAA4DA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BP,GAA5B,CAA5D,GAA+FC,YAAY,IAAI,IAAhB,GAAuBA,YAAvB,GAAsC,EAAtI,CAAlC;AACA,QAAMO,oBAAoB,GAAGC,WAAW,CAAEC,GAAD,IAAS;AAChD,QAAI,OAAOA,GAAP,KAAe,UAAnB,EAA+B;AAC7BP,cAAQ,CAAEQ,OAAD,IAAa;AACpB,cAAMC,MAAM,GAAGF,GAAG,CAACC,OAAD,CAAlB;AACAN,cAAM,CAACC,YAAP,CAAoBO,OAApB,CAA4Bb,GAA5B,EAAiCY,MAAjC;AACA,eAAOA,MAAP;AACD,OAJO,CAAR;AAKD,KAND,MAMO;AACLP,YAAM,CAACC,YAAP,CAAoBO,OAApB,CAA4Bb,GAA5B,EAAiCU,GAAjC;AACAP,cAAQ,CAACO,GAAD,CAAR;AACD;AACF,GAXuC,EAWrC,CAACV,GAAD,CAXqC,CAAxC;AAYAc,gBAAc,CAAC,SAAD,EAAaC,KAAD,IAAW;AACnC,QAAIA,KAAK,CAACC,WAAN,KAAsBX,MAAM,CAACC,YAA7B,IAA6CS,KAAK,CAACf,GAAN,KAAcA,GAA/D,EAAoE;AAClEG,cAAQ,CAACY,KAAK,CAACE,QAAP,CAAR;AACD;AACF,GAJa,CAAd;AAKAC,WAAS,CAAC,MAAM;AACd,QAAIjB,YAAY,IAAI,CAACC,KAArB,EAA4B;AAC1BM,0BAAoB,CAACP,YAAD,CAApB;AACD;AACF,GAJQ,EAIN,CAACA,YAAD,EAAeC,KAAf,EAAsBM,oBAAtB,CAJM,CAAT;AAKA,SAAO,CAACN,KAAK,IAAID,YAAV,EAAwBO,oBAAxB,CAAP;AACF","names":["useLocalStorageValue","key","defaultValue","value","setValue","useState","window","localStorage","getItem","setLocalStorageValue","useCallback","val","current","result","setItem","useWindowEvent","event","storageArea","newValue","useEffect"],"sources":["/Users/nikita/testProjectTabel/node_modules/@mantine/hooks/src/use-local-storage-value/use-local-storage-value.ts"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event';\n\nexport function useLocalStorageValue<T extends string>({\n  key,\n  defaultValue = undefined,\n}: {\n  key: string;\n  defaultValue?: T;\n}) {\n  const [value, setValue] = useState<T>(\n    typeof window !== 'undefined' && 'localStorage' in window\n      ? (window.localStorage.getItem(key) as T)\n      : ((defaultValue ?? '') as T)\n  );\n\n  const setLocalStorageValue = useCallback(\n    (val: T | ((prevState: T) => T)) => {\n      if (typeof val === 'function') {\n        setValue((current) => {\n          const result = val(current);\n          window.localStorage.setItem(key, result);\n          return result;\n        });\n      } else {\n        window.localStorage.setItem(key, val);\n        setValue(val);\n      }\n    },\n    [key]\n  );\n\n  useWindowEvent('storage', (event) => {\n    if (event.storageArea === window.localStorage && event.key === key) {\n      setValue(event.newValue as T);\n    }\n  });\n\n  useEffect(() => {\n    if (defaultValue && !value) {\n      setLocalStorageValue(defaultValue);\n    }\n  }, [defaultValue, value, setLocalStorageValue]);\n\n  return [value || defaultValue, setLocalStorageValue] as const;\n}\n"]},"metadata":{},"sourceType":"module"}