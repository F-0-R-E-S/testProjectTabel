{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/testProjectTabel/src/modules/main/components/mainTabel.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMemo } from \"react\";\nimport { useTable } from \"react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainTabel = _ref => {\n  _s();\n\n  let {\n    users\n  } = _ref;\n  console.log(users);\n  const data = useMemo(() => users, [users]);\n  const columns = useMemo(() => [{\n    Header: 'ID',\n    accessor: 'ID' // accessor is the \"key\" in the data\n\n  }, {\n    Header: 'Имя',\n    accessor: 'FirstName' // accessor is the \"key\" in the data\n\n  }, {\n    Header: 'Почта',\n    accessor: 'City' // accessor is the \"key\" in the data\n\n  }, {\n    Header: 'Активность роботов (кол-во)',\n    accessor: 'Orientation' // accessor is the \"key\" in the data\n\n  }, {\n    Header: 'Сумма счетов',\n    accessor: 'ScansInPeriod' // accessor is the \"key\" in the data\n\n  }, {\n    Header: 'Прибыль',\n    accessor: 'VIP' // accessor is the \"key\" in the data\n\n  }, {\n    Header: 'Дата регистрации',\n    accessor: 'CreatedAt' // accessor is the \"key\" in the data\n\n  }, {\n    Header: 'Комиссия',\n    accessor: 'Ban' // accessor is the \"key\" in the data\n\n  }, {\n    Header: 'Статус плательщика',\n    accessor: 'State' // accessor is the \"key\" in the data\n\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    style: {\n      border: 'solid 1px blue'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          style: {\n            borderBottom: 'solid 3px red',\n            background: 'aliceblue',\n            color: 'black',\n            fontWeight: 'bold'\n          },\n          children: column.render('Header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n              style: {\n                padding: '10px',\n                border: 'solid 1px gray',\n                background: 'papayawhip'\n              },\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MainTabel, \"8jX+zWtVJG3zYUjUH1dOsSE4wfs=\", false, function () {\n  return [useTable];\n});\n\n_c = MainTabel;\nexport default MainTabel;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainTabel\");","map":{"version":3,"sources":["/Users/nikita/testProjectTabel/src/modules/main/components/mainTabel.tsx"],"names":["useMemo","useTable","MainTabel","users","console","log","data","columns","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","border","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","borderBottom","background","color","fontWeight","render","row","getRowProps","cells","cell","getCellProps","padding"],"mappings":"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","sourcesContent":["import { useMemo } from \"react\"\nimport { useTable } from \"react-table\"\n\ntype Props = {\n    users: any\n}\n\nconst MainTabel = ({ users }: Props) => {\n\n    console.log(users)\n    const data = useMemo(\n        () => users,\n        [users])\n\n    const columns: any = useMemo(\n        () => [\n            {\n                Header: 'ID',\n                accessor: 'ID', // accessor is the \"key\" in the data\n            },\n            {\n                Header: 'Имя',\n                accessor: 'FirstName', // accessor is the \"key\" in the data\n            },\n            {\n                Header: 'Почта',\n                accessor: 'City', // accessor is the \"key\" in the data\n            },\n            {\n                Header: 'Активность роботов (кол-во)',\n                accessor: 'Orientation', // accessor is the \"key\" in the data\n            },\n            {\n                Header: 'Сумма счетов',\n                accessor: 'ScansInPeriod', // accessor is the \"key\" in the data\n            },\n            {\n                Header: 'Прибыль',\n                accessor: 'VIP', // accessor is the \"key\" in the data\n            },\n            {\n                Header: 'Дата регистрации',\n                accessor: 'CreatedAt', // accessor is the \"key\" in the data\n            },\n            {\n                Header: 'Комиссия',\n                accessor: 'Ban', // accessor is the \"key\" in the data\n            },\n            {\n                Header: 'Статус плательщика',\n                accessor: 'State', // accessor is the \"key\" in the data\n            },\n        ],\n        []\n    )\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n    } = useTable({ columns, data })\n\n    return (\n        <table {...getTableProps()} style={{ border: 'solid 1px blue' }}>\n            <thead>\n                {headerGroups.map(headerGroup => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map(column => (\n                            <th\n                                {...column.getHeaderProps()}\n                                style={{\n                                    borderBottom: 'solid 3px red',\n                                    background: 'aliceblue',\n                                    color: 'black',\n                                    fontWeight: 'bold',\n                                }}\n                            >\n                                {column.render('Header')}\n                            </th>\n                        ))}\n                    </tr>\n                ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {rows.map(row => {\n                    prepareRow(row)\n                    return (\n                        <tr {...row.getRowProps()}>\n                            {row.cells.map(cell => {\n                                return (\n                                    <td\n                                        {...cell.getCellProps()}\n                                        style={{\n                                            padding: '10px',\n                                            border: 'solid 1px gray',\n                                            background: 'papayawhip',\n                                        }}\n                                    >\n                                        {cell.render('Cell')}\n                                    </td>\n                                )\n                            })}\n                        </tr>\n                    )\n                })}\n            </tbody>\n        </table>\n    )\n}\n\nexport default MainTabel\n"]},"metadata":{},"sourceType":"module"}