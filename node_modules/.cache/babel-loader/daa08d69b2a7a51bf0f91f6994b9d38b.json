{"ast":null,"code":"import React, { forwardRef, useRef, useState, useEffect } from 'react';\nimport { useUncontrolled, useDidUpdate } from '@mantine/hooks';\nimport { ColorSwatch } from '../ColorSwatch/ColorSwatch.js';\nimport { HueSlider } from './HueSlider/HueSlider.js';\nimport { AlphaSlider } from './AlphaSlider/AlphaSlider.js';\nimport { Saturation } from './Saturation/Saturation.js';\nimport { Swatches } from './Swatches/Swatches.js';\nimport useStyles from './ColorPicker.styles.js';\nimport { isColorValid, parseColor } from './converters/parsers.js';\nimport { convertHsvaTo } from './converters/converters.js';\nimport { Box } from '../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst SWATCH_SIZES = {\n  xs: 26,\n  sm: 34,\n  md: 42,\n  lg: 50,\n  xl: 54\n};\nconst ColorPicker = forwardRef((_a, ref) => {\n  var _b = _a,\n      {\n    value,\n    defaultValue,\n    onChange,\n    format,\n    swatches,\n    swatchesPerRow = 10,\n    size = \"sm\",\n    withPicker = true,\n    fullWidth = false,\n    focusable = true,\n    __staticSelector = \"ColorPicker\",\n    saturationLabel,\n    hueLabel,\n    alphaLabel,\n    className,\n    styles,\n    classNames\n  } = _b,\n      others = __objRest(_b, [\"value\", \"defaultValue\", \"onChange\", \"format\", \"swatches\", \"swatchesPerRow\", \"size\", \"withPicker\", \"fullWidth\", \"focusable\", \"__staticSelector\", \"saturationLabel\", \"hueLabel\", \"alphaLabel\", \"className\", \"styles\", \"classNames\"]);\n\n  const {\n    classes,\n    cx,\n    theme\n  } = useStyles({\n    size,\n    fullWidth\n  }, {\n    classNames,\n    styles,\n    name: __staticSelector\n  });\n  const formatRef = useRef(format);\n  const valueRef = useRef(null);\n  const withAlpha = format === \"rgba\" || format === \"hsla\";\n  const [shouldSkip, setShouldSkip] = useState(false);\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: \"#FFFFFF\",\n    rule: val => isColorValid(val),\n    onChange\n  });\n  const [parsed, setParsed] = useState(parseColor(_value));\n\n  const handleChange = color => {\n    setShouldSkip(true);\n    setParsed(current => {\n      const next = __spreadValues(__spreadValues({}, current), color);\n\n      valueRef.current = convertHsvaTo(formatRef.current, next);\n      return next;\n    });\n    Promise.resolve().then(() => setValue(valueRef.current)).then(() => setShouldSkip(false));\n  };\n\n  useEffect(() => {\n    if (isColorValid(value) && !shouldSkip) {\n      setParsed(parseColor(value));\n    }\n  }, [value]);\n  useDidUpdate(() => {\n    formatRef.current = format;\n    setValue(convertHsvaTo(format, parsed));\n  }, [format]);\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    className: cx(classes.wrapper, className),\n    ref\n  }, others), withPicker && /* @__PURE__ */React.createElement(React.Fragment, null, /* @__PURE__ */React.createElement(Saturation, {\n    value: parsed,\n    onChange: handleChange,\n    color: _value,\n    styles,\n    classNames,\n    size,\n    focusable,\n    saturationLabel,\n    __staticSelector\n  }), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.body\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.sliders\n  }, /* @__PURE__ */React.createElement(HueSlider, {\n    value: parsed.h,\n    onChange: h => handleChange({\n      h\n    }),\n    size,\n    styles,\n    classNames,\n    focusable,\n    \"aria-label\": hueLabel,\n    __staticSelector\n  }), withAlpha && /* @__PURE__ */React.createElement(AlphaSlider, {\n    value: parsed.a,\n    onChange: a => handleChange({\n      a\n    }),\n    size,\n    color: convertHsvaTo(\"hex\", parsed),\n    style: {\n      marginTop: 6\n    },\n    styles,\n    classNames,\n    focusable,\n    \"aria-label\": alphaLabel,\n    __staticSelector\n  })), withAlpha && /* @__PURE__ */React.createElement(ColorSwatch, {\n    color: _value,\n    radius: \"sm\",\n    size: theme.fn.size({\n      size,\n      sizes: SWATCH_SIZES\n    }),\n    className: classes.preview\n  }))), Array.isArray(swatches) && /* @__PURE__ */React.createElement(Swatches, {\n    data: swatches,\n    onSelect: handleChange,\n    style: {\n      marginTop: 5\n    },\n    swatchesPerRow,\n    focusable,\n    classNames,\n    styles,\n    __staticSelector\n  }));\n});\nColorPicker.displayName = \"@mantine/core/ColorPicker\";\nexport { ColorPicker };","map":{"version":3,"mappings":";;;;;;;;;;;AAAA,IAAIA,SAAS,GAAGC,MAAM,CAACC,cAAvB;AACA,IAAIC,mBAAmB,GAAGF,MAAM,CAACG,qBAAjC;AACA,IAAIC,YAAY,GAAGJ,MAAM,CAACK,SAAP,CAAiBC,cAApC;AACA,IAAIC,YAAY,GAAGP,MAAM,CAACK,SAAP,CAAiBG,oBAApC;;AACA,IAAIC,eAAe,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAWC,KAAX,KAAqBD,GAAG,IAAID,GAAP,GAAaX,SAAS,CAACW,GAAD,EAAMC,GAAN,EAAW;AAAEE,YAAU,EAAE,IAAd;AAAoBC,cAAY,EAAE,IAAlC;AAAwCC,UAAQ,EAAE,IAAlD;AAAwDH;AAAxD,CAAX,CAAtB,GAAoGF,GAAG,CAACC,GAAD,CAAH,GAAWC,KAA1J;;AACA,IAAII,cAAc,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC7B,OAAK,IAAIC,IAAT,IAAiBD,CAAC,KAAKA,CAAC,GAAG,EAAT,CAAlB,EACE,IAAId,YAAY,CAACgB,IAAb,CAAkBF,CAAlB,EAAqBC,IAArB,CAAJ,EACEV,eAAe,CAACQ,CAAD,EAAIE,IAAJ,EAAUD,CAAC,CAACC,IAAD,CAAX,CAAf;;AACJ,MAAIjB,mBAAJ,EACE,KAAK,IAAIiB,IAAT,IAAiBjB,mBAAmB,CAACgB,CAAD,CAApC,EAAyC;AACvC,QAAIX,YAAY,CAACa,IAAb,CAAkBF,CAAlB,EAAqBC,IAArB,CAAJ,EACEV,eAAe,CAACQ,CAAD,EAAIE,IAAJ,EAAUD,CAAC,CAACC,IAAD,CAAX,CAAf;AACH;AACH,SAAOF,CAAP;AACD,CAVD;;AAWA,IAAII,SAAS,GAAG,CAACC,MAAD,EAASC,OAAT,KAAqB;AACnC,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIL,IAAT,IAAiBG,MAAjB,EACE,IAAIlB,YAAY,CAACgB,IAAb,CAAkBE,MAAlB,EAA0BH,IAA1B,KAAmCI,OAAO,CAACE,OAAR,CAAgBN,IAAhB,IAAwB,CAA/D,EACEK,MAAM,CAACL,IAAD,CAAN,GAAeG,MAAM,CAACH,IAAD,CAArB;;AACJ,MAAIG,MAAM,IAAI,IAAV,IAAkBpB,mBAAtB,EACE,KAAK,IAAIiB,IAAT,IAAiBjB,mBAAmB,CAACoB,MAAD,CAApC,EAA8C;AAC5C,QAAIC,OAAO,CAACE,OAAR,CAAgBN,IAAhB,IAAwB,CAAxB,IAA6BZ,YAAY,CAACa,IAAb,CAAkBE,MAAlB,EAA0BH,IAA1B,CAAjC,EACEK,MAAM,CAACL,IAAD,CAAN,GAAeG,MAAM,CAACH,IAAD,CAArB;AACH;AACH,SAAOK,MAAP;AACD,CAXD;;AAsBA,MAAME,YAAY,GAAG;AACnBC,IAAE,EAAE,EADe;AAEnBC,IAAE,EAAE,EAFe;AAGnBC,IAAE,EAAE,EAHe;AAInBC,IAAE,EAAE,EAJe;AAKnBC,IAAE,EAAE;AALe,CAArB;AAOY,MAACC,WAAW,GAAGC,UAAU,CAAC,CAACC,EAAD,EAAKC,GAAL,KAAa;AACjD,MAAIC,EAAE,GAAGF,EAAT;AAAA,MAAa;AACXtB,SADW;AAEXyB,gBAFW;AAGXC,YAHW;AAIXC,UAJW;AAKXC,YALW;AAMXC,kBAAc,GAAG,EANN;AAOXC,QAAI,GAAG,IAPI;AAQXC,cAAU,GAAG,IARF;AASXC,aAAS,GAAG,KATD;AAUXC,aAAS,GAAG,IAVD;AAWXC,oBAAgB,GAAG,aAXR;AAYXC,mBAZW;AAaXC,YAbW;AAcXC,cAdW;AAeXC,aAfW;AAgBXC,UAhBW;AAiBXC;AAjBW,MAkBThB,EAlBJ;AAAA,MAkBQiB,MAAM,GAAGhC,SAAS,CAACe,EAAD,EAAK,CAC7B,OAD6B,EAE7B,cAF6B,EAG7B,UAH6B,EAI7B,QAJ6B,EAK7B,UAL6B,EAM7B,gBAN6B,EAO7B,MAP6B,EAQ7B,YAR6B,EAS7B,WAT6B,EAU7B,WAV6B,EAW7B,kBAX6B,EAY7B,iBAZ6B,EAa7B,UAb6B,EAc7B,YAd6B,EAe7B,WAf6B,EAgB7B,QAhB6B,EAiB7B,YAjB6B,CAAL,CAlB1B;;AAqCA,QAAM;AAAEkB,WAAF;AAAWC,MAAX;AAAeC;AAAf,MAAyBC,SAAS,CAAC;AAAEf,QAAF;AAAQE;AAAR,GAAD,EAAsB;AAAEQ,cAAF;AAAcD,UAAd;AAAsBO,QAAI,EAAEZ;AAA5B,GAAtB,CAAxC;AACA,QAAMa,SAAS,GAAGC,MAAM,CAACrB,MAAD,CAAxB;AACA,QAAMsB,QAAQ,GAAGD,MAAM,CAAC,IAAD,CAAvB;AACA,QAAME,SAAS,GAAGvB,MAAM,KAAK,MAAX,IAAqBA,MAAM,KAAK,MAAlD;AACA,QAAM,CAACwB,UAAD,EAAaC,aAAb,IAA8BC,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACC,MAAD,EAASC,QAAT,IAAqBC,eAAe,CAAC;AACzCxD,SADyC;AAEzCyB,gBAFyC;AAGzCgC,cAAU,EAAE,SAH6B;AAIzCC,QAAI,EAAGC,GAAD,IAASC,YAAY,CAACD,GAAD,CAJc;AAKzCjC;AALyC,GAAD,CAA1C;AAOA,QAAM,CAACmC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAACU,UAAU,CAACT,MAAD,CAAX,CAApC;;AACA,QAAMU,YAAY,GAAIC,KAAD,IAAW;AAC9Bb,iBAAa,CAAC,IAAD,CAAb;AACAU,aAAS,CAAEI,OAAD,IAAa;AACrB,YAAMC,IAAI,GAAG/D,cAAc,CAACA,cAAc,CAAC,EAAD,EAAK8D,OAAL,CAAf,EAA8BD,KAA9B,CAA3B;;AACAhB,cAAQ,CAACiB,OAAT,GAAmBE,aAAa,CAACrB,SAAS,CAACmB,OAAX,EAAoBC,IAApB,CAAhC;AACA,aAAOA,IAAP;AACD,KAJQ,CAAT;AAKAE,WAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,MAAMhB,QAAQ,CAACN,QAAQ,CAACiB,OAAV,CAArC,EAAyDK,IAAzD,CAA8D,MAAMnB,aAAa,CAAC,KAAD,CAAjF;AACD,GARD;;AASAoB,WAAS,CAAC,MAAM;AACd,QAAIZ,YAAY,CAAC5D,KAAD,CAAZ,IAAuB,CAACmD,UAA5B,EAAwC;AACtCW,eAAS,CAACC,UAAU,CAAC/D,KAAD,CAAX,CAAT;AACD;AACF,GAJQ,EAIN,CAACA,KAAD,CAJM,CAAT;AAKAyE,cAAY,CAAC,MAAM;AACjB1B,aAAS,CAACmB,OAAV,GAAoBvC,MAApB;AACA4B,YAAQ,CAACa,aAAa,CAACzC,MAAD,EAASkC,MAAT,CAAd,CAAR;AACD,GAHW,EAGT,CAAClC,MAAD,CAHS,CAAZ;AAIA,wBAAuB+C,KAAK,CAACC,aAAN,CAAoBC,GAApB,EAAyBxE,cAAc,CAAC;AAC7DkC,aAAS,EAAEK,EAAE,CAACD,OAAO,CAACmC,OAAT,EAAkBvC,SAAlB,CADgD;AAE7Df;AAF6D,GAAD,EAG3DkB,MAH2D,CAAvC,EAGXV,UAAU,mBAAoB2C,KAAK,CAACC,aAAN,CAAoBD,KAAK,CAACI,QAA1B,EAAoC,IAApC,EAAwC,eAAkBJ,KAAK,CAACC,aAAN,CAAoBI,UAApB,EAAgC;AAClI/E,SAAK,EAAE6D,MAD2H;AAElInC,YAAQ,EAAEsC,YAFwH;AAGlIC,SAAK,EAAEX,MAH2H;AAIlIf,UAJkI;AAKlIC,cALkI;AAMlIV,QANkI;AAOlIG,aAPkI;AAQlIE,mBARkI;AASlID;AATkI,GAAhC,CAA1D,EAUxC,eAAkBwC,KAAK,CAACC,aAAN,CAAoB,KAApB,EAA2B;AAC7CrC,aAAS,EAAEI,OAAO,CAACsC;AAD0B,GAA3B,EAEnB,eAAkBN,KAAK,CAACC,aAAN,CAAoB,KAApB,EAA2B;AAC5CrC,aAAS,EAAEI,OAAO,CAACuC;AADyB,GAA3B,EAElB,eAAkBP,KAAK,CAACC,aAAN,CAAoBO,SAApB,EAA+B;AAChDlF,SAAK,EAAE6D,MAAM,CAACsB,CADkC;AAEhDzD,YAAQ,EAAGyD,CAAD,IAAOnB,YAAY,CAAC;AAAEmB;AAAF,KAAD,CAFmB;AAGhDrD,QAHgD;AAIhDS,UAJgD;AAKhDC,cALgD;AAMhDP,aANgD;AAOhD,kBAAcG,QAPkC;AAQhDF;AARgD,GAA/B,CAFA,EAWfgB,SAAS,mBAAoBwB,KAAK,CAACC,aAAN,CAAoBS,WAApB,EAAiC;AAChEpF,SAAK,EAAE6D,MAAM,CAACxD,CADkD;AAEhEqB,YAAQ,EAAGrB,CAAD,IAAO2D,YAAY,CAAC;AAAE3D;AAAF,KAAD,CAFmC;AAGhEyB,QAHgE;AAIhEmC,SAAK,EAAEG,aAAa,CAAC,KAAD,EAAQP,MAAR,CAJ4C;AAKhEwB,SAAK,EAAE;AAAEC,eAAS,EAAE;AAAb,KALyD;AAMhE/C,UANgE;AAOhEC,cAPgE;AAQhEP,aARgE;AAShE,kBAAcI,UATkD;AAUhEH;AAVgE,GAAjC,CAXd,CAFC,EAwBfgB,SAAS,mBAAoBwB,KAAK,CAACC,aAAN,CAAoBY,WAApB,EAAiC;AACjEtB,SAAK,EAAEX,MAD0D;AAEjEkC,UAAM,EAAE,IAFyD;AAGjE1D,QAAI,EAAEc,KAAK,CAAC6C,EAAN,CAAS3D,IAAT,CAAc;AAAEA,UAAF;AAAQ4D,WAAK,EAAE5E;AAAf,KAAd,CAH2D;AAIjEwB,aAAS,EAAEI,OAAO,CAACiD;AAJ8C,GAAjC,CAxBd,CAVsB,CAHnB,EA0CjBC,KAAK,CAACC,OAAN,CAAcjE,QAAd,KAAuB,eAAoB8C,KAAK,CAACC,aAAN,CAAoBmB,QAApB,EAA8B;AAC7EC,QAAI,EAAEnE,QADuE;AAE7EoE,YAAQ,EAAEhC,YAFmE;AAG7EqB,SAAK,EAAE;AAAEC,eAAS,EAAE;AAAb,KAHsE;AAI7EzD,kBAJ6E;AAK7EI,aAL6E;AAM7EO,cAN6E;AAO7ED,UAP6E;AAQ7EL;AAR6E,GAA9B,CA1C1B,CAAvB;AAoDD,CAzHoC,CAAzB;AA0HZd,WAAW,CAAC6E,WAAZ,GAA0B,2BAA1B","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","SWATCH_SIZES","xs","sm","md","lg","xl","ColorPicker","forwardRef","_a","ref","_b","defaultValue","onChange","format","swatches","swatchesPerRow","size","withPicker","fullWidth","focusable","__staticSelector","saturationLabel","hueLabel","alphaLabel","className","styles","classNames","others","classes","cx","theme","useStyles","name","formatRef","useRef","valueRef","withAlpha","shouldSkip","setShouldSkip","useState","_value","setValue","useUncontrolled","finalValue","rule","val","isColorValid","parsed","setParsed","parseColor","handleChange","color","current","next","convertHsvaTo","Promise","resolve","then","useEffect","useDidUpdate","React","createElement","Box","wrapper","Fragment","Saturation","body","sliders","HueSlider","h","AlphaSlider","style","marginTop","ColorSwatch","radius","fn","sizes","preview","Array","isArray","Swatches","data","onSelect","displayName"],"sources":["/Users/nikita/testProjectTabel/node_modules/@mantine/core/src/components/ColorPicker/ColorPicker.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, forwardRef } from 'react';\nimport { useUncontrolled, useDidUpdate } from '@mantine/hooks';\nimport { DefaultProps, MantineSize, ClassNames } from '@mantine/styles';\nimport { Box } from '../Box';\nimport { ColorSwatch } from '../ColorSwatch/ColorSwatch';\nimport { convertHsvaTo, isColorValid, parseColor } from './converters';\nimport { ColorSliderStylesNames } from './ColorSlider/ColorSlider';\nimport { HueSlider } from './HueSlider/HueSlider';\nimport { AlphaSlider } from './AlphaSlider/AlphaSlider';\nimport { Saturation, SaturationStylesNames } from './Saturation/Saturation';\nimport { Swatches, SwatchesStylesNames } from './Swatches/Swatches';\nimport { ThumbStylesNames } from './Thumb/Thumb';\nimport { HsvaColor } from './types';\nimport useStyles from './ColorPicker.styles';\n\nexport type ColorPickerStylesNames =\n  | ClassNames<typeof useStyles>\n  | ColorSliderStylesNames\n  | SwatchesStylesNames\n  | SaturationStylesNames\n  | ThumbStylesNames;\n\nexport interface ColorPickerBaseProps {\n  /** Controlled component value */\n  value?: string;\n\n  /** Uncontrolled component default value */\n  defaultValue?: string;\n\n  /** Called when color changes */\n  onChange?(color: string): void;\n\n  /** Color format */\n  format?: 'hex' | 'rgba' | 'rgb' | 'hsl' | 'hsla';\n\n  /** Set to false to display swatches only */\n  withPicker?: boolean;\n\n  /** Predefined colors */\n  swatches?: string[];\n\n  /** Number of swatches displayed in one row */\n  swatchesPerRow?: number;\n\n  /** Predefined component size */\n  size?: MantineSize;\n}\n\nexport interface ColorPickerProps\n  extends DefaultProps<ColorPickerStylesNames>,\n    ColorPickerBaseProps,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'onChange' | 'value' | 'defaultValue'> {\n  /** Force picker to take 100% width of its container */\n  fullWidth?: boolean;\n\n  /** Should interactive elements be focusable */\n  focusable?: boolean;\n\n  /** Static selector base */\n  __staticSelector?: string;\n\n  /** Saturation slider aria-label */\n  saturationLabel?: string;\n\n  /** Hue slider aria-label */\n  hueLabel?: string;\n\n  /** Alpha slider aria-label */\n  alphaLabel?: string;\n}\n\nconst SWATCH_SIZES = {\n  xs: 26,\n  sm: 34,\n  md: 42,\n  lg: 50,\n  xl: 54,\n};\n\nexport const ColorPicker = forwardRef<HTMLDivElement, ColorPickerProps>(\n  (\n    {\n      value,\n      defaultValue,\n      onChange,\n      format,\n      swatches,\n      swatchesPerRow = 10,\n      size = 'sm',\n      withPicker = true,\n      fullWidth = false,\n      focusable = true,\n      __staticSelector = 'ColorPicker',\n      saturationLabel,\n      hueLabel,\n      alphaLabel,\n      className,\n      styles,\n      classNames,\n      ...others\n    }: ColorPickerProps,\n    ref\n  ) => {\n    const { classes, cx, theme } = useStyles(\n      { size, fullWidth },\n      { classNames, styles, name: __staticSelector }\n    );\n    const formatRef = useRef(format);\n    const valueRef = useRef<string>(null);\n    const withAlpha = format === 'rgba' || format === 'hsla';\n\n    const [shouldSkip, setShouldSkip] = useState(false);\n    const [_value, setValue] = useUncontrolled({\n      value,\n      defaultValue,\n      finalValue: '#FFFFFF',\n      rule: (val) => isColorValid(val),\n      onChange,\n    });\n\n    const [parsed, setParsed] = useState(parseColor(_value));\n\n    const handleChange = (color: Partial<HsvaColor>) => {\n      // This is required for useEffect to work, it's dirty but works fine\n      setShouldSkip(true);\n\n      setParsed((current) => {\n        const next = { ...current, ...color };\n        valueRef.current = convertHsvaTo(formatRef.current, next);\n        return next;\n      });\n\n      Promise.resolve()\n        .then(() => setValue(valueRef.current))\n        .then(() => setShouldSkip(false));\n    };\n\n    useEffect(() => {\n      if (isColorValid(value) && !shouldSkip) {\n        setParsed(parseColor(value));\n      }\n    }, [value]);\n\n    useDidUpdate(() => {\n      formatRef.current = format;\n      setValue(convertHsvaTo(format, parsed));\n    }, [format]);\n\n    return (\n      <Box className={cx(classes.wrapper, className)} ref={ref} {...others}>\n        {withPicker && (\n          <>\n            <Saturation\n              value={parsed}\n              onChange={handleChange}\n              color={_value}\n              styles={styles}\n              classNames={classNames}\n              size={size}\n              focusable={focusable}\n              saturationLabel={saturationLabel}\n              __staticSelector={__staticSelector}\n            />\n\n            <div className={classes.body}>\n              <div className={classes.sliders}>\n                <HueSlider\n                  value={parsed.h}\n                  onChange={(h) => handleChange({ h })}\n                  size={size}\n                  styles={styles}\n                  classNames={classNames}\n                  focusable={focusable}\n                  aria-label={hueLabel}\n                  __staticSelector={__staticSelector}\n                />\n\n                {withAlpha && (\n                  <AlphaSlider\n                    value={parsed.a}\n                    onChange={(a) => handleChange({ a })}\n                    size={size}\n                    color={convertHsvaTo('hex', parsed)}\n                    style={{ marginTop: 6 }}\n                    styles={styles}\n                    classNames={classNames}\n                    focusable={focusable}\n                    aria-label={alphaLabel}\n                    __staticSelector={__staticSelector}\n                  />\n                )}\n              </div>\n\n              {withAlpha && (\n                <ColorSwatch\n                  color={_value}\n                  radius=\"sm\"\n                  size={theme.fn.size({ size, sizes: SWATCH_SIZES })}\n                  className={classes.preview}\n                />\n              )}\n            </div>\n          </>\n        )}\n\n        {Array.isArray(swatches) && (\n          <Swatches\n            data={swatches}\n            onSelect={handleChange}\n            style={{ marginTop: 5 }}\n            swatchesPerRow={swatchesPerRow}\n            focusable={focusable}\n            classNames={classNames}\n            styles={styles}\n            __staticSelector={__staticSelector}\n          />\n        )}\n      </Box>\n    );\n  }\n);\n\nColorPicker.displayName = '@mantine/core/ColorPicker';\n"]},"metadata":{},"sourceType":"module"}