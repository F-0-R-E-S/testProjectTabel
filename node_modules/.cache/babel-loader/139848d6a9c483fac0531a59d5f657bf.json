{"ast":null,"code":"function isValidMargin(margin) {\n  return typeof margin === \"string\" || typeof margin === \"number\";\n}\n\nconst MARGINS = {\n  m: \"margin\",\n  mt: \"marginTop\",\n  mb: \"marginBottom\",\n  ml: \"marginLeft\",\n  mr: \"marginRight\"\n};\n\nfunction getMargins(margins, theme) {\n  const styles = {};\n\n  if (isValidMargin(margins.my)) {\n    const margin = theme.fn.size({\n      size: margins.my,\n      sizes: theme.spacing\n    });\n    styles.marginTop = margin;\n    styles.marginBottom = margin;\n  }\n\n  if (isValidMargin(margins.mx)) {\n    const margin = theme.fn.size({\n      size: margins.mx,\n      sizes: theme.spacing\n    });\n    styles.marginLeft = margin;\n    styles.marginRight = margin;\n  }\n\n  Object.keys(MARGINS).forEach(margin => {\n    if (isValidMargin(margins[margin])) {\n      styles[MARGINS[margin]] = theme.fn.size({\n        size: margins[margin],\n        sizes: theme.spacing\n      });\n    }\n  });\n  return styles;\n}\n\nexport { getMargins };","map":{"version":3,"mappings":"AAAA,SAASA,aAAT,CAAuBC,MAAvB,EAA+B;AAC7B,SAAO,OAAOA,MAAP,KAAkB,QAAlB,IAA8B,OAAOA,MAAP,KAAkB,QAAvD;AACD;;AACD,MAAMC,OAAO,GAAG;AACdC,GAAC,EAAE,QADW;AAEdC,IAAE,EAAE,WAFU;AAGdC,IAAE,EAAE,cAHU;AAIdC,IAAE,EAAE,YAJU;AAKdC,IAAE,EAAE;AALU,CAAhB;;AAOO,SAASC,UAAT,CAAoBC,OAApB,EAA6BC,KAA7B,EAAoC;AACzC,QAAMC,MAAM,GAAG,EAAf;;AACA,MAAIX,aAAa,CAACS,OAAO,CAACG,EAAT,CAAjB,EAA+B;AAC7B,UAAMX,MAAM,GAAGS,KAAK,CAACG,EAAN,CAASC,IAAT,CAAc;AAAEA,UAAI,EAAEL,OAAO,CAACG,EAAhB;AAAoBG,WAAK,EAAEL,KAAK,CAACM;AAAjC,KAAd,CAAf;AACAL,UAAM,CAACM,SAAP,GAAmBhB,MAAnB;AACAU,UAAM,CAACO,YAAP,GAAsBjB,MAAtB;AACD;;AACD,MAAID,aAAa,CAACS,OAAO,CAACU,EAAT,CAAjB,EAA+B;AAC7B,UAAMlB,MAAM,GAAGS,KAAK,CAACG,EAAN,CAASC,IAAT,CAAc;AAAEA,UAAI,EAAEL,OAAO,CAACU,EAAhB;AAAoBJ,WAAK,EAAEL,KAAK,CAACM;AAAjC,KAAd,CAAf;AACAL,UAAM,CAACS,UAAP,GAAoBnB,MAApB;AACAU,UAAM,CAACU,WAAP,GAAqBpB,MAArB;AACD;;AACDqB,QAAM,CAACC,IAAP,CAAYrB,OAAZ,EAAqBsB,OAArB,CAA8BvB,MAAD,IAAY;AACvC,QAAID,aAAa,CAACS,OAAO,CAACR,MAAD,CAAR,CAAjB,EAAoC;AAClCU,YAAM,CAACT,OAAO,CAACD,MAAD,CAAR,CAAN,GAA0BS,KAAK,CAACG,EAAN,CAASC,IAAT,CAAc;AACtCA,YAAI,EAAEL,OAAO,CAACR,MAAD,CADyB;AAEtCc,aAAK,EAAEL,KAAK,CAACM;AAFyB,OAAd,CAA1B;AAID;AACF,GAPD;AAQA,SAAOL,MAAP;AACF","names":["isValidMargin","margin","MARGINS","m","mt","mb","ml","mr","getMargins","margins","theme","styles","my","fn","size","sizes","spacing","marginTop","marginBottom","mx","marginLeft","marginRight","Object","keys","forEach"],"sources":["/Users/nikita/testProjectTabel/node_modules/@mantine/core/src/components/Box/use-sx/get-margins/get-margins.ts"],"sourcesContent":["import { MantineMargins, MantineTheme, CSSObject } from '@mantine/styles';\n\nfunction isValidMargin(margin: any) {\n  return typeof margin === 'string' || typeof margin === 'number';\n}\n\nconst MARGINS = {\n  m: 'margin',\n  mt: 'marginTop',\n  mb: 'marginBottom',\n  ml: 'marginLeft',\n  mr: 'marginRight',\n};\n\nexport function getMargins(margins: MantineMargins, theme: MantineTheme) {\n  const styles: CSSObject = {};\n\n  if (isValidMargin(margins.my)) {\n    const margin = theme.fn.size({ size: margins.my, sizes: theme.spacing });\n    styles.marginTop = margin;\n    styles.marginBottom = margin;\n  }\n\n  if (isValidMargin(margins.mx)) {\n    const margin = theme.fn.size({ size: margins.mx, sizes: theme.spacing });\n    styles.marginLeft = margin;\n    styles.marginRight = margin;\n  }\n\n  Object.keys(MARGINS).forEach((margin) => {\n    if (isValidMargin(margins[margin])) {\n      styles[MARGINS[margin]] = theme.fn.size({\n        size: margins[margin],\n        sizes: theme.spacing,\n      });\n    }\n  });\n\n  return styles;\n}\n"]},"metadata":{},"sourceType":"module"}