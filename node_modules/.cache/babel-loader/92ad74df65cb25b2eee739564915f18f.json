{"ast":null,"code":"import React, { forwardRef, useRef, useState } from 'react';\nimport { getDefaultZIndex } from '@mantine/styles';\nimport { mergeRefs } from '@mantine/hooks';\nimport useStyles from './Tooltip.styles.js';\nimport { Box } from '../Box/Box.js';\nimport { Popper } from '../Popper/Popper.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst Tooltip = forwardRef((_a, ref) => {\n  var _b = _a,\n      {\n    className,\n    label,\n    children,\n    opened,\n    delay = 0,\n    gutter = 5,\n    color = \"gray\",\n    radius = \"sm\",\n    disabled = false,\n    withArrow = false,\n    arrowSize = 2,\n    position = \"top\",\n    placement = \"center\",\n    transition = \"pop-top-left\",\n    transitionDuration = 100,\n    zIndex = getDefaultZIndex(\"popover\"),\n    transitionTimingFunction,\n    width = \"auto\",\n    wrapLines = false,\n    allowPointerEvents = false,\n    positionDependencies = [],\n    withinPortal = true,\n    tooltipRef,\n    tooltipId,\n    classNames,\n    styles,\n    onMouseLeave,\n    onMouseEnter\n  } = _b,\n      others = __objRest(_b, [\"className\", \"label\", \"children\", \"opened\", \"delay\", \"gutter\", \"color\", \"radius\", \"disabled\", \"withArrow\", \"arrowSize\", \"position\", \"placement\", \"transition\", \"transitionDuration\", \"zIndex\", \"transitionTimingFunction\", \"width\", \"wrapLines\", \"allowPointerEvents\", \"positionDependencies\", \"withinPortal\", \"tooltipRef\", \"tooltipId\", \"classNames\", \"styles\", \"onMouseLeave\", \"onMouseEnter\"]);\n\n  const {\n    classes,\n    cx\n  } = useStyles({\n    color,\n    radius\n  }, {\n    classNames,\n    styles,\n    name: \"Tooltip\"\n  });\n  const timeoutRef = useRef();\n  const [_opened, setOpened] = useState(false);\n  const visible = (typeof opened === \"boolean\" ? opened : _opened) && !disabled;\n  const [referenceElement, setReferenceElement] = useState(null);\n\n  const handleOpen = () => {\n    window.clearTimeout(timeoutRef.current);\n    setOpened(true);\n  };\n\n  const handleClose = () => {\n    if (delay !== 0) {\n      timeoutRef.current = window.setTimeout(() => {\n        setOpened(false);\n      }, delay);\n    } else {\n      setOpened(false);\n    }\n  };\n\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    className: cx(classes.root, className),\n    onMouseEnter: event => {\n      handleOpen();\n      typeof onMouseEnter === \"function\" && onMouseEnter(event);\n    },\n    onMouseLeave: event => {\n      handleClose();\n      typeof onMouseLeave === \"function\" && onMouseLeave(event);\n    },\n    onFocusCapture: handleOpen,\n    onBlurCapture: handleClose,\n    ref: mergeRefs(setReferenceElement, ref)\n  }, others), /* @__PURE__ */React.createElement(Popper, {\n    referenceElement,\n    transitionDuration,\n    transition,\n    mounted: visible,\n    position,\n    placement,\n    gutter,\n    withArrow,\n    arrowSize,\n    arrowDistance: 7,\n    zIndex,\n    arrowClassName: classes.arrow,\n    forceUpdateDependencies: [color, radius, ...positionDependencies],\n    withinPortal\n  }, /* @__PURE__ */React.createElement(Box, {\n    className: classes.body,\n    ref: tooltipRef,\n    sx: {\n      pointerEvents: allowPointerEvents ? \"all\" : \"none\",\n      whiteSpace: wrapLines ? \"normal\" : \"nowrap\",\n      width\n    }\n  }, label)), children);\n});\nTooltip.displayName = \"@mantine/core/Tooltip\";\nexport { Tooltip };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","Tooltip","forwardRef","_a","ref","_b","className","label","children","opened","delay","gutter","color","radius","disabled","withArrow","arrowSize","position","placement","transition","transitionDuration","zIndex","getDefaultZIndex","transitionTimingFunction","width","wrapLines","allowPointerEvents","positionDependencies","withinPortal","tooltipRef","tooltipId","classNames","styles","onMouseLeave","onMouseEnter","others","classes","cx","useStyles","name","timeoutRef","useRef","_opened","setOpened","useState","visible","referenceElement","setReferenceElement","handleOpen","window","clearTimeout","current","handleClose","setTimeout","React","createElement","Box","root","event","onFocusCapture","onBlurCapture","mergeRefs","Popper","mounted","arrowDistance","arrowClassName","arrow","forceUpdateDependencies","body","sx","pointerEvents","whiteSpace","displayName"],"sources":["/Users/nikita/testProjectTabel/node_modules/@mantine/core/src/components/Tooltip/Tooltip.tsx"],"sourcesContent":["import React, { useState, useRef, forwardRef } from 'react';\nimport {\n  DefaultProps,\n  MantineColor,\n  ClassNames,\n  getDefaultZIndex,\n  MantineNumberSize,\n} from '@mantine/styles';\nimport { mergeRefs } from '@mantine/hooks';\nimport { Box } from '../Box';\nimport { Popper, SharedPopperProps } from '../Popper';\nimport useStyles from './Tooltip.styles';\n\nexport type TooltipStylesNames = ClassNames<typeof useStyles>;\n\nexport interface TooltipProps\n  extends DefaultProps<TooltipStylesNames>,\n    SharedPopperProps,\n    React.ComponentPropsWithoutRef<'div'> {\n  /** Tooltip content */\n  label: React.ReactNode;\n\n  /** Any react node that should trigger tooltip */\n  children: React.ReactNode;\n\n  /** Tooltip opened state for controlled variant */\n  opened?: boolean;\n\n  /** Close delay in ms, 0 to disable delay */\n  delay?: number;\n\n  /** Any color from theme.colors, defaults to gray in light color scheme and dark in dark colors scheme */\n  color?: MantineColor;\n\n  /** Radius from theme.radius, or number to set border-radius in px */\n  radius?: MantineNumberSize;\n\n  /** True to disable tooltip */\n  disabled?: boolean;\n\n  /** Arrow size in px */\n  arrowSize?: number;\n\n  /** Tooltip width in px or auto */\n  width?: number | 'auto';\n\n  /** Allow multiline tooltip content */\n  wrapLines?: boolean;\n\n  /** Allow pointer events on tooltip, warning: this may break some animations */\n  allowPointerEvents?: boolean;\n\n  /** Get tooltip ref */\n  tooltipRef?: React.ForwardedRef<HTMLDivElement>;\n\n  /** Tooltip id to bind aria-describedby */\n  tooltipId?: string;\n\n  /** useEffect dependencies to force update tooltip position */\n  positionDependencies?: any[];\n\n  /** Whether to render the target element in a Portal */\n  withinPortal?: boolean;\n}\n\nexport const Tooltip = forwardRef<HTMLDivElement, TooltipProps>(\n  (\n    {\n      className,\n      label,\n      children,\n      opened,\n      delay = 0,\n      gutter = 5,\n      color = 'gray',\n      radius = 'sm',\n      disabled = false,\n      withArrow = false,\n      arrowSize = 2,\n      position = 'top',\n      placement = 'center',\n      transition = 'pop-top-left',\n      transitionDuration = 100,\n      zIndex = getDefaultZIndex('popover'),\n      transitionTimingFunction,\n      width = 'auto',\n      wrapLines = false,\n      allowPointerEvents = false,\n      positionDependencies = [],\n      withinPortal = true,\n      tooltipRef,\n      tooltipId,\n      classNames,\n      styles,\n      onMouseLeave,\n      onMouseEnter,\n      ...others\n    }: TooltipProps,\n    ref\n  ) => {\n    const { classes, cx } = useStyles({ color, radius }, { classNames, styles, name: 'Tooltip' });\n    const timeoutRef = useRef<number>();\n    const [_opened, setOpened] = useState(false);\n    const visible = (typeof opened === 'boolean' ? opened : _opened) && !disabled;\n    const [referenceElement, setReferenceElement] = useState(null);\n\n    const handleOpen = () => {\n      window.clearTimeout(timeoutRef.current);\n      setOpened(true);\n    };\n\n    const handleClose = () => {\n      if (delay !== 0) {\n        timeoutRef.current = window.setTimeout(() => {\n          setOpened(false);\n        }, delay);\n      } else {\n        setOpened(false);\n      }\n    };\n\n    return (\n      <Box<'div'>\n        className={cx(classes.root, className)}\n        onMouseEnter={(event) => {\n          handleOpen();\n          typeof onMouseEnter === 'function' && onMouseEnter(event);\n        }}\n        onMouseLeave={(event) => {\n          handleClose();\n          typeof onMouseLeave === 'function' && onMouseLeave(event);\n        }}\n        onFocusCapture={handleOpen}\n        onBlurCapture={handleClose}\n        ref={mergeRefs(setReferenceElement, ref)}\n        {...others}\n      >\n        <Popper\n          referenceElement={referenceElement}\n          transitionDuration={transitionDuration}\n          transition={transition}\n          mounted={visible}\n          position={position}\n          placement={placement}\n          gutter={gutter}\n          withArrow={withArrow}\n          arrowSize={arrowSize}\n          arrowDistance={7}\n          zIndex={zIndex}\n          arrowClassName={classes.arrow}\n          forceUpdateDependencies={[color, radius, ...positionDependencies]}\n          withinPortal={withinPortal}\n        >\n          <Box\n            className={classes.body}\n            ref={tooltipRef}\n            sx={{\n              pointerEvents: allowPointerEvents ? 'all' : 'none',\n              whiteSpace: wrapLines ? 'normal' : 'nowrap',\n              width,\n            }}\n          >\n            {label}\n          </Box>\n        </Popper>\n\n        {children}\n      </Box>\n    );\n  }\n);\n\nTooltip.displayName = '@mantine/core/Tooltip';\n"]},"metadata":{},"sourceType":"module"}