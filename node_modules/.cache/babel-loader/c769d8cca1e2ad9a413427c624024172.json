{"ast":null,"code":"/* istanbul ignore file */\n\n/* tslint:disable */\n\n/* eslint-disable */\nimport { request as __request } from '../core/request';\nexport class TilesService {\n  /**\n   * Get Tile\n   * @param z\n   * @param x\n   * @param y\n   * @param url\n   * @returns any Successful Response\n   * @throws ApiError\n   */\n  static getTileTilesZXYGet(z, x, y, url) {\n    return __request({\n      method: 'GET',\n      path: `/tiles/${z}/${x}/${y}`,\n      query: {\n        'url': url\n      },\n      errors: {\n        422: `Validation Error`\n      }\n    });\n  }\n  /**\n   * Get Cog Info\n   * @param url\n   * @returns GeoPoint Successful Response\n   * @throws ApiError\n   */\n\n\n  static getCogInfoCogInfoGet(url) {\n    return __request({\n      method: 'GET',\n      path: `/cog-info`,\n      query: {\n        'url': url\n      },\n      errors: {\n        422: `Validation Error`\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/nikita/testProjectTabel/src/api-client-codegen/services/TilesService.ts"],"names":["request","__request","TilesService","getTileTilesZXYGet","z","x","y","url","method","path","query","errors","getCogInfoCogInfoGet"],"mappings":"AAAA;;AACA;;AACA;AAGA,SAASA,OAAO,IAAIC,SAApB,QAAqC,iBAArC;AAEA,OAAO,MAAMC,YAAN,CAAmB;AAEtB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACoC,SAAlBC,kBAAkB,CAC5BC,CAD4B,EAE5BC,CAF4B,EAG5BC,CAH4B,EAI5BC,GAJ4B,EAKN;AACtB,WAAON,SAAS,CAAC;AACbO,MAAAA,MAAM,EAAE,KADK;AAEbC,MAAAA,IAAI,EAAG,UAASL,CAAE,IAAGC,CAAE,IAAGC,CAAE,EAFf;AAGbI,MAAAA,KAAK,EAAE;AACH,eAAOH;AADJ,OAHM;AAMbI,MAAAA,MAAM,EAAE;AACJ,aAAM;AADF;AANK,KAAD,CAAhB;AAUH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACsC,SAApBC,oBAAoB,CAC9BL,GAD8B,EAEH;AAC3B,WAAON,SAAS,CAAC;AACbO,MAAAA,MAAM,EAAE,KADK;AAEbC,MAAAA,IAAI,EAAG,WAFM;AAGbC,MAAAA,KAAK,EAAE;AACH,eAAOH;AADJ,OAHM;AAMbI,MAAAA,MAAM,EAAE;AACJ,aAAM;AADF;AANK,KAAD,CAAhB;AAUH;;AAhDqB","sourcesContent":["/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { GeoPoint } from '../models/GeoPoint';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport { request as __request } from '../core/request';\n\nexport class TilesService {\n\n    /**\n     * Get Tile\n     * @param z\n     * @param x\n     * @param y\n     * @param url\n     * @returns any Successful Response\n     * @throws ApiError\n     */\n    public static getTileTilesZXYGet(\n        z: number,\n        x: number,\n        y: number,\n        url: string,\n    ): CancelablePromise<any> {\n        return __request({\n            method: 'GET',\n            path: `/tiles/${z}/${x}/${y}`,\n            query: {\n                'url': url,\n            },\n            errors: {\n                422: `Validation Error`,\n            },\n        });\n    }\n\n    /**\n     * Get Cog Info\n     * @param url\n     * @returns GeoPoint Successful Response\n     * @throws ApiError\n     */\n    public static getCogInfoCogInfoGet(\n        url: string,\n    ): CancelablePromise<GeoPoint> {\n        return __request({\n            method: 'GET',\n            path: `/cog-info`,\n            query: {\n                'url': url,\n            },\n            errors: {\n                422: `Validation Error`,\n            },\n        });\n    }\n\n}"]},"metadata":{},"sourceType":"module"}