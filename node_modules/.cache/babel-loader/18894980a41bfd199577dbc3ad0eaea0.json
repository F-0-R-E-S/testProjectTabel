{"ast":null,"code":"import { useRef, useEffect } from 'react';\nconst DEFAULT_EVENTS = [\"mousedown\", \"touchstart\"];\n\nfunction useClickOutside(handler, events, nodes) {\n  const ref = useRef();\n  useEffect(() => {\n    const listener = event => {\n      if (Array.isArray(nodes)) {\n        const shouldTrigger = nodes.every(node => !!node && !node.contains(event.target));\n        shouldTrigger && handler();\n      } else if (ref.current && !ref.current.contains(event.target)) {\n        handler();\n      }\n    };\n\n    (events || DEFAULT_EVENTS).forEach(fn => document.addEventListener(fn, listener));\n    return () => {\n      (events || DEFAULT_EVENTS).forEach(fn => document.removeEventListener(fn, listener));\n    };\n  }, [ref, handler, nodes]);\n  return ref;\n}\n\nexport { useClickOutside };","map":{"version":3,"mappings":";AACA,MAAMA,cAAc,GAAG,CAAC,WAAD,EAAc,YAAd,CAAvB;;AACO,SAASC,eAAT,CAAyBC,OAAzB,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiD;AACtD,QAAMC,GAAG,GAAGC,MAAM,EAAlB;AACAC,WAAS,CAAC,MAAM;AACd,UAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,UAAIC,KAAK,CAACC,OAAN,CAAcP,KAAd,CAAJ,EAA0B;AACxB,cAAMQ,aAAa,GAAGR,KAAK,CAACS,KAAN,CAAaC,IAAD,IAAU,CAAC,CAACA,IAAF,IAAU,CAACA,IAAI,CAACC,QAAL,CAAcN,KAAK,CAACO,MAApB,CAAjC,CAAtB;AACAJ,qBAAa,IAAIV,OAAO,EAAxB;AACD,OAHD,MAGO,IAAIG,GAAG,CAACY,OAAJ,IAAe,CAACZ,GAAG,CAACY,OAAJ,CAAYF,QAAZ,CAAqBN,KAAK,CAACO,MAA3B,CAApB,EAAwD;AAC7Dd,eAAO;AACR;AACF,KAPD;;AAQA,KAACC,MAAM,IAAIH,cAAX,EAA2BkB,OAA3B,CAAoCC,EAAD,IAAQC,QAAQ,CAACC,gBAAT,CAA0BF,EAA1B,EAA8BX,QAA9B,CAA3C;AACA,WAAO,MAAM;AACX,OAACL,MAAM,IAAIH,cAAX,EAA2BkB,OAA3B,CAAoCC,EAAD,IAAQC,QAAQ,CAACE,mBAAT,CAA6BH,EAA7B,EAAiCX,QAAjC,CAA3C;AACD,KAFD;AAGD,GAbQ,EAaN,CAACH,GAAD,EAAMH,OAAN,EAAeE,KAAf,CAbM,CAAT;AAcA,SAAOC,GAAP;AACF","names":["DEFAULT_EVENTS","useClickOutside","handler","events","nodes","ref","useRef","useEffect","listener","event","Array","isArray","shouldTrigger","every","node","contains","target","current","forEach","fn","document","addEventListener","removeEventListener"],"sources":["/Users/nikita/testProjectTabel/node_modules/@mantine/hooks/src/use-click-outside/use-click-outside.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\nconst DEFAULT_EVENTS = ['mousedown', 'touchstart'];\n\nexport function useClickOutside<T extends HTMLElement = any>(\n  handler: () => void,\n  events?: string[] | null,\n  nodes?: HTMLElement[]\n) {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    const listener = (event: any) => {\n      if (Array.isArray(nodes)) {\n        const shouldTrigger = nodes.every((node) => !!node && !node.contains(event.target));\n        shouldTrigger && handler();\n      } else if (ref.current && !ref.current.contains(event.target)) {\n        handler();\n      }\n    };\n\n    (events || DEFAULT_EVENTS).forEach((fn) => document.addEventListener(fn, listener));\n\n    return () => {\n      (events || DEFAULT_EVENTS).forEach((fn) => document.removeEventListener(fn, listener));\n    };\n  }, [ref, handler, nodes]);\n\n  return ref;\n}\n"]},"metadata":{},"sourceType":"module"}