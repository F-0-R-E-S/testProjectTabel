{"ast":null,"code":"/* istanbul ignore file */\n\n/* tslint:disable */\n\n/* eslint-disable */\nimport { request as __request } from '../core/request';\nexport class RasterService {\n  /**\n   * List Raster\n   * @returns Raster Successful Response\n   * @throws ApiError\n   */\n  static listRasterRasterGet() {\n    return __request({\n      method: 'GET',\n      path: `/raster`\n    });\n  }\n  /**\n   * Init Raster\n   * @param requestBody\n   * @returns Raster Successful Response\n   * @throws ApiError\n   */\n\n\n  static initRasterRasterPost(requestBody) {\n    return __request({\n      method: 'POST',\n      path: `/raster`,\n      body: requestBody,\n      mediaType: 'application/json',\n      errors: {\n        422: `Validation Error`\n      }\n    });\n  }\n  /**\n   * Add Raster As Url\n   * @param rasterId\n   * @param requestBody\n   * @returns Raster Successful Response\n   * @throws ApiError\n   */\n\n\n  static addRasterAsUrlRasterRasterIdUrlPut(rasterId, requestBody) {\n    return __request({\n      method: 'PUT',\n      path: `/raster/${rasterId}/url`,\n      body: requestBody,\n      mediaType: 'application/json',\n      errors: {\n        422: `Validation Error`\n      }\n    });\n  }\n  /**\n   * Upload Raster\n   * @param rasterId\n   * @param formData\n   * @returns Raster Successful Response\n   * @throws ApiError\n   */\n\n\n  static uploadRasterRasterRasterIdUploadPut(rasterId, formData) {\n    return __request({\n      method: 'PUT',\n      path: `/raster/${rasterId}/upload`,\n      formData: formData,\n      mediaType: 'multipart/form-data',\n      errors: {\n        422: `Validation Error`\n      }\n    });\n  }\n  /**\n   * Delete Raster\n   * @param rasterId\n   * @returns void\n   * @throws ApiError\n   */\n\n\n  static deleteRasterRasterRasterIdDelete(rasterId) {\n    return __request({\n      method: 'DELETE',\n      path: `/raster/${rasterId}`,\n      errors: {\n        422: `Validation Error`\n      }\n    });\n  }\n  /**\n   * Get Raster Data Url\n   * @param rasterId\n   * @returns RedirerectUrl Successful Response\n   * @throws ApiError\n   */\n\n\n  static getRasterDataUrlRasterRasterIdDataurlGet(rasterId) {\n    return __request({\n      method: 'GET',\n      path: `/raster/${rasterId}/dataurl`,\n      errors: {\n        422: `Validation Error`\n      }\n    });\n  }\n  /**\n   * Get Raster Data\n   * @param rasterId\n   * @returns void\n   * @throws ApiError\n   */\n\n\n  static getRasterDataRasterRasterIdDataGet(rasterId) {\n    return __request({\n      method: 'GET',\n      path: `/raster/${rasterId}/data`,\n      errors: {\n        302: `Successful Response`,\n        422: `Validation Error`\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/nikita/testProjectTabel/src/api-client-codegen/services/RasterService.ts"],"names":["request","__request","RasterService","listRasterRasterGet","method","path","initRasterRasterPost","requestBody","body","mediaType","errors","addRasterAsUrlRasterRasterIdUrlPut","rasterId","uploadRasterRasterRasterIdUploadPut","formData","deleteRasterRasterRasterIdDelete","getRasterDataUrlRasterRasterIdDataurlGet","getRasterDataRasterRasterIdDataGet"],"mappings":"AAAA;;AACA;;AACA;AAMA,SAASA,OAAO,IAAIC,SAApB,QAAqC,iBAArC;AAEA,OAAO,MAAMC,aAAN,CAAoB;AAEvB;AACJ;AACA;AACA;AACA;AACqC,SAAnBC,mBAAmB,GAAqC;AAClE,WAAOF,SAAS,CAAC;AACbG,MAAAA,MAAM,EAAE,KADK;AAEbC,MAAAA,IAAI,EAAG;AAFM,KAAD,CAAhB;AAIH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACsC,SAApBC,oBAAoB,CAC9BC,WAD8B,EAEL;AACzB,WAAON,SAAS,CAAC;AACbG,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,IAAI,EAAG,SAFM;AAGbG,MAAAA,IAAI,EAAED,WAHO;AAIbE,MAAAA,SAAS,EAAE,kBAJE;AAKbC,MAAAA,MAAM,EAAE;AACJ,aAAM;AADF;AALK,KAAD,CAAhB;AASH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACoD,SAAlCC,kCAAkC,CAC5CC,QAD4C,EAE5CL,WAF4C,EAGnB;AACzB,WAAON,SAAS,CAAC;AACbG,MAAAA,MAAM,EAAE,KADK;AAEbC,MAAAA,IAAI,EAAG,WAAUO,QAAS,MAFb;AAGbJ,MAAAA,IAAI,EAAED,WAHO;AAIbE,MAAAA,SAAS,EAAE,kBAJE;AAKbC,MAAAA,MAAM,EAAE;AACJ,aAAM;AADF;AALK,KAAD,CAAhB;AASH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACqD,SAAnCG,mCAAmC,CAC7CD,QAD6C,EAE7CE,QAF6C,EAKpB;AACzB,WAAOb,SAAS,CAAC;AACbG,MAAAA,MAAM,EAAE,KADK;AAEbC,MAAAA,IAAI,EAAG,WAAUO,QAAS,SAFb;AAGbE,MAAAA,QAAQ,EAAEA,QAHG;AAIbL,MAAAA,SAAS,EAAE,qBAJE;AAKbC,MAAAA,MAAM,EAAE;AACJ,aAAM;AADF;AALK,KAAD,CAAhB;AASH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACkD,SAAhCK,gCAAgC,CAC1CH,QAD0C,EAEnB;AACvB,WAAOX,SAAS,CAAC;AACbG,MAAAA,MAAM,EAAE,QADK;AAEbC,MAAAA,IAAI,EAAG,WAAUO,QAAS,EAFb;AAGbF,MAAAA,MAAM,EAAE;AACJ,aAAM;AADF;AAHK,KAAD,CAAhB;AAOH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AAC0D,SAAxCM,wCAAwC,CAClDJ,QADkD,EAElB;AAChC,WAAOX,SAAS,CAAC;AACbG,MAAAA,MAAM,EAAE,KADK;AAEbC,MAAAA,IAAI,EAAG,WAAUO,QAAS,UAFb;AAGbF,MAAAA,MAAM,EAAE;AACJ,aAAM;AADF;AAHK,KAAD,CAAhB;AAOH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACoD,SAAlCO,kCAAkC,CAC5CL,QAD4C,EAErB;AACvB,WAAOX,SAAS,CAAC;AACbG,MAAAA,MAAM,EAAE,KADK;AAEbC,MAAAA,IAAI,EAAG,WAAUO,QAAS,OAFb;AAGbF,MAAAA,MAAM,EAAE;AACJ,aAAM,qBADF;AAEJ,aAAM;AAFF;AAHK,KAAD,CAAhB;AAQH;;AArIsB","sourcesContent":["/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ExgernalObject } from '../models/ExgernalObject';\nimport type { Raster } from '../models/Raster';\nimport type { RasterMetadata } from '../models/RasterMetadata';\nimport type { RedirerectUrl } from '../models/RedirerectUrl';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport { request as __request } from '../core/request';\n\nexport class RasterService {\n\n    /**\n     * List Raster\n     * @returns Raster Successful Response\n     * @throws ApiError\n     */\n    public static listRasterRasterGet(): CancelablePromise<Array<Raster>> {\n        return __request({\n            method: 'GET',\n            path: `/raster`,\n        });\n    }\n\n    /**\n     * Init Raster\n     * @param requestBody\n     * @returns Raster Successful Response\n     * @throws ApiError\n     */\n    public static initRasterRasterPost(\n        requestBody: RasterMetadata,\n    ): CancelablePromise<Raster> {\n        return __request({\n            method: 'POST',\n            path: `/raster`,\n            body: requestBody,\n            mediaType: 'application/json',\n            errors: {\n                422: `Validation Error`,\n            },\n        });\n    }\n\n    /**\n     * Add Raster As Url\n     * @param rasterId\n     * @param requestBody\n     * @returns Raster Successful Response\n     * @throws ApiError\n     */\n    public static addRasterAsUrlRasterRasterIdUrlPut(\n        rasterId: string,\n        requestBody: ExgernalObject,\n    ): CancelablePromise<Raster> {\n        return __request({\n            method: 'PUT',\n            path: `/raster/${rasterId}/url`,\n            body: requestBody,\n            mediaType: 'application/json',\n            errors: {\n                422: `Validation Error`,\n            },\n        });\n    }\n\n    /**\n     * Upload Raster\n     * @param rasterId\n     * @param formData\n     * @returns Raster Successful Response\n     * @throws ApiError\n     */\n    public static uploadRasterRasterRasterIdUploadPut(\n        rasterId: string,\n        formData: {\n            file: Blob;\n        },\n    ): CancelablePromise<Raster> {\n        return __request({\n            method: 'PUT',\n            path: `/raster/${rasterId}/upload`,\n            formData: formData,\n            mediaType: 'multipart/form-data',\n            errors: {\n                422: `Validation Error`,\n            },\n        });\n    }\n\n    /**\n     * Delete Raster\n     * @param rasterId\n     * @returns void\n     * @throws ApiError\n     */\n    public static deleteRasterRasterRasterIdDelete(\n        rasterId: string,\n    ): CancelablePromise<void> {\n        return __request({\n            method: 'DELETE',\n            path: `/raster/${rasterId}`,\n            errors: {\n                422: `Validation Error`,\n            },\n        });\n    }\n\n    /**\n     * Get Raster Data Url\n     * @param rasterId\n     * @returns RedirerectUrl Successful Response\n     * @throws ApiError\n     */\n    public static getRasterDataUrlRasterRasterIdDataurlGet(\n        rasterId: string,\n    ): CancelablePromise<RedirerectUrl> {\n        return __request({\n            method: 'GET',\n            path: `/raster/${rasterId}/dataurl`,\n            errors: {\n                422: `Validation Error`,\n            },\n        });\n    }\n\n    /**\n     * Get Raster Data\n     * @param rasterId\n     * @returns void\n     * @throws ApiError\n     */\n    public static getRasterDataRasterRasterIdDataGet(\n        rasterId: string,\n    ): CancelablePromise<void> {\n        return __request({\n            method: 'GET',\n            path: `/raster/${rasterId}/data`,\n            errors: {\n                302: `Successful Response`,\n                422: `Validation Error`,\n            },\n        });\n    }\n\n}"]},"metadata":{},"sourceType":"module"}