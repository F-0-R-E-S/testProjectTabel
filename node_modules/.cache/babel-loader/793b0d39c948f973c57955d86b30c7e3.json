{"ast":null,"code":"/* istanbul ignore file */\n\n/* tslint:disable */\n\n/* eslint-disable */\nimport { request as __request } from '../core/request';\nexport class DetectionService {\n  /**\n   * Get Models\n   * @returns ModelDetection Successful Response\n   * @throws ApiError\n   */\n  static getModelsDetectionModelGet() {\n    return __request({\n      method: 'GET',\n      path: `/detection/model`\n    });\n  }\n  /**\n   * Delete Model\n   * @param modelId\n   * @returns any Successful Response\n   * @throws ApiError\n   */\n\n\n  static deleteModelDetectionModelModelIdDelete(modelId) {\n    return __request({\n      method: 'DELETE',\n      path: `/detection/model/${modelId}`,\n      errors: {\n        422: `Validation Error`\n      }\n    });\n  }\n  /**\n   * Run Inference\n   * @param modelId\n   * @param requestBody\n   * @returns JobPublicApi Successful Response\n   * @throws ApiError\n   */\n\n\n  static runInferenceDetectionModelModelIdRunPost(modelId, requestBody) {\n    return __request({\n      method: 'POST',\n      path: `/detection/model/${modelId}/run`,\n      body: requestBody,\n      mediaType: 'application/json',\n      errors: {\n        422: `Validation Error`\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/nikita/testProjectTabel/src/api-client-codegen/services/DetectionService.ts"],"names":["request","__request","DetectionService","getModelsDetectionModelGet","method","path","deleteModelDetectionModelModelIdDelete","modelId","errors","runInferenceDetectionModelModelIdRunPost","requestBody","body","mediaType"],"mappings":"AAAA;;AACA;;AACA;AAKA,SAASA,OAAO,IAAIC,SAApB,QAAqC,iBAArC;AAEA,OAAO,MAAMC,gBAAN,CAAuB;AAE1B;AACJ;AACA;AACA;AACA;AAC4C,SAA1BC,0BAA0B,GAA6C;AACjF,WAAOF,SAAS,CAAC;AACbG,MAAAA,MAAM,EAAE,KADK;AAEbC,MAAAA,IAAI,EAAG;AAFM,KAAD,CAAhB;AAIH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACwD,SAAtCC,sCAAsC,CAChDC,OADgD,EAE1B;AACtB,WAAON,SAAS,CAAC;AACbG,MAAAA,MAAM,EAAE,QADK;AAEbC,MAAAA,IAAI,EAAG,oBAAmBE,OAAQ,EAFrB;AAGbC,MAAAA,MAAM,EAAE;AACJ,aAAM;AADF;AAHK,KAAD,CAAhB;AAOH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;;;AAC0D,SAAxCC,wCAAwC,CAClDF,OADkD,EAElDG,WAFkD,EAGnB;AAC/B,WAAOT,SAAS,CAAC;AACbG,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,IAAI,EAAG,oBAAmBE,OAAQ,MAFrB;AAGbI,MAAAA,IAAI,EAAED,WAHO;AAIbE,MAAAA,SAAS,EAAE,kBAJE;AAKbJ,MAAAA,MAAM,EAAE;AACJ,aAAM;AADF;AALK,KAAD,CAAhB;AASH;;AApDyB","sourcesContent":["/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { JobPublicApi } from '../models/JobPublicApi';\nimport type { ModelDetection } from '../models/ModelDetection';\nimport type { RequestDetection } from '../models/RequestDetection';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport { request as __request } from '../core/request';\n\nexport class DetectionService {\n\n    /**\n     * Get Models\n     * @returns ModelDetection Successful Response\n     * @throws ApiError\n     */\n    public static getModelsDetectionModelGet(): CancelablePromise<Array<ModelDetection>> {\n        return __request({\n            method: 'GET',\n            path: `/detection/model`,\n        });\n    }\n\n    /**\n     * Delete Model\n     * @param modelId\n     * @returns any Successful Response\n     * @throws ApiError\n     */\n    public static deleteModelDetectionModelModelIdDelete(\n        modelId: string,\n    ): CancelablePromise<any> {\n        return __request({\n            method: 'DELETE',\n            path: `/detection/model/${modelId}`,\n            errors: {\n                422: `Validation Error`,\n            },\n        });\n    }\n\n    /**\n     * Run Inference\n     * @param modelId\n     * @param requestBody\n     * @returns JobPublicApi Successful Response\n     * @throws ApiError\n     */\n    public static runInferenceDetectionModelModelIdRunPost(\n        modelId: string,\n        requestBody: RequestDetection,\n    ): CancelablePromise<JobPublicApi> {\n        return __request({\n            method: 'POST',\n            path: `/detection/model/${modelId}/run`,\n            body: requestBody,\n            mediaType: 'application/json',\n            errors: {\n                422: `Validation Error`,\n            },\n        });\n    }\n\n}"]},"metadata":{},"sourceType":"module"}