{"ast":null,"code":"import React, { Children } from 'react';\nimport useStyles from './MediaQuery.styles.js';\n\nfunction MediaQuery(_ref) {\n  let {\n    children,\n    smallerThan,\n    largerThan,\n    query,\n    styles,\n    className\n  } = _ref;\n\n  var _a;\n\n  const {\n    classes,\n    cx\n  } = useStyles({\n    smallerThan,\n    largerThan,\n    query,\n    styles\n  }, {\n    name: \"MediaQuery\"\n  });\n  const child = Children.only(children);\n  return React.cloneElement(child, {\n    className: cx(classes.media, (_a = child.props) == null ? void 0 : _a.className, className)\n  });\n}\n\nMediaQuery.displayName = \"@mantine/core/MediaQuery\";\nexport { MediaQuery };","map":{"version":3,"mappings":";;;AAEO,SAASA,UAAT,OAOJ;AAAA,MAPwB;AACzBC,YADyB;AAEzBC,eAFyB;AAGzBC,cAHyB;AAIzBC,SAJyB;AAKzBC,UALyB;AAMzBC;AANyB,GAOxB;;AACD,MAAIC,EAAJ;;AACA,QAAM;AAAEC,WAAF;AAAWC;AAAX,MAAkBC,SAAS,CAAC;AAAER,eAAF;AAAeC,cAAf;AAA2BC,SAA3B;AAAkCC;AAAlC,GAAD,EAA6C;AAAEM,QAAI,EAAE;AAAR,GAA7C,CAAjC;AACA,QAAMC,KAAK,GAAGC,QAAQ,CAACC,IAAT,CAAcb,QAAd,CAAd;AACA,SAAOc,KAAK,CAACC,YAAN,CAAmBJ,KAAnB,EAA0B;AAC/BN,aAAS,EAAEG,EAAE,CAACD,OAAO,CAACS,KAAT,EAAgB,CAACV,EAAE,GAAGK,KAAK,CAACM,KAAZ,KAAsB,IAAtB,GAA6B,KAAK,CAAlC,GAAsCX,EAAE,CAACD,SAAzD,EAAoEA,SAApE;AADkB,GAA1B,CAAP;AAGD;;AACDN,UAAU,CAACmB,WAAX,GAAyB,0BAAzB","names":["MediaQuery","children","smallerThan","largerThan","query","styles","className","_a","classes","cx","useStyles","name","child","Children","only","React","cloneElement","media","props","displayName"],"sources":["/Users/nikita/testProjectTabel/node_modules/@mantine/core/src/components/MediaQuery/MediaQuery.tsx"],"sourcesContent":["import React, { Children } from 'react';\nimport { MantineNumberSize, CSSObject } from '@mantine/styles';\nimport useStyles from './MediaQuery.styles';\n\nexport interface MediaQueryProps {\n  className?: string;\n\n  /** Child that should be shown at given breakpoint, it must accept className prop */\n  children: React.ReactNode;\n\n  /** Styles applied to child when viewport is smaller than given breakpoint */\n  smallerThan?: MantineNumberSize;\n\n  /** Styles applied to child when viewport is larger than given breakpoint */\n  largerThan?: MantineNumberSize;\n\n  /** Any other media query */\n  query?: string;\n\n  /** Styles applied to child when breakpoint matches */\n  styles: CSSObject;\n}\n\nexport function MediaQuery({\n  children,\n  smallerThan,\n  largerThan,\n  query,\n  styles,\n  className,\n}: MediaQueryProps) {\n  const { classes, cx } = useStyles(\n    { smallerThan, largerThan, query, styles },\n    { name: 'MediaQuery' }\n  );\n  const child = Children.only(children) as React.ReactElement;\n  return React.cloneElement(child, {\n    className: cx(classes.media, child.props?.className, className),\n  });\n}\n\nMediaQuery.displayName = '@mantine/core/MediaQuery';\n"]},"metadata":{},"sourceType":"module"}