{"ast":null,"code":"import { combineReducers, createStore, compose, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { getEnvProduction } from \"../utils/env\";\nimport user from \"./user\";\nimport rootSaga from \"./saga\";\nimport model from \"./model\";\nimport trainingData from \"./trainingData\";\nimport dataVectors from \"./trainingVectorData\";\nimport dataSets from \"./trainingDataSets\";\nimport training from \"./training\";\nimport job from \"./job\"; // ---\n// REDUCERS\n// ---\n\nexport default function configureStore() {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware]; // TODO: check to disable by default on prods\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    trace: true\n  }) : compose;\n  const enhancer = applyMiddleware(...middlewares);\n  const rootReducer = combineReducers({\n    user\n  });\n  const store = createStore(rootReducer, composeEnhancers(enhancer)); // to debug without proper extentions\n\n  if (!getEnvProduction()) {\n    window.store = store;\n  }\n\n  sagaMiddleware.run(rootSaga);\n  return store;\n}","map":{"version":3,"sources":["/Users/nikita/testProjectTabel/src/store/index.js"],"names":["combineReducers","createStore","compose","applyMiddleware","createSagaMiddleware","getEnvProduction","user","rootSaga","model","trainingData","dataVectors","dataSets","training","job","configureStore","sagaMiddleware","middlewares","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","enhancer","rootReducer","store","run"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,gBAAT,QAAiC,cAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,QAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CAEA;AACA;AACA;;AAEA,eAAe,SAASC,cAAT,GAA0B;AACvC,QAAMC,cAAc,GAAGX,oBAAoB,EAA3C;AACA,QAAMY,WAAW,GAAG,CAACD,cAAD,CAApB,CAFuC,CAIvC;;AACA,QAAME,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,GACrBD,MAAM,CAACC,oCAAP,CAA4C;AAC1CC,IAAAA,KAAK,EAAE;AADmC,GAA5C,CADqB,GAIrBlB,OAJJ;AAKA,QAAMmB,QAAQ,GAAGlB,eAAe,CAAC,GAAGa,WAAJ,CAAhC;AAEA,QAAMM,WAAW,GAAGtB,eAAe,CAAC;AAClCM,IAAAA;AADkC,GAAD,CAAnC;AAIA,QAAMiB,KAAK,GAAGtB,WAAW,CAACqB,WAAD,EAAcL,gBAAgB,CAACI,QAAD,CAA9B,CAAzB,CAhBuC,CAkBvC;;AACA,MAAI,CAAChB,gBAAgB,EAArB,EAAyB;AACvBa,IAAAA,MAAM,CAACK,KAAP,GAAeA,KAAf;AACD;;AAEDR,EAAAA,cAAc,CAACS,GAAf,CAAmBjB,QAAnB;AAEA,SAAOgB,KAAP;AACD","sourcesContent":["import { combineReducers, createStore, compose, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { getEnvProduction } from \"../utils/env\";\nimport user from \"./user\";\nimport rootSaga from \"./saga\";\nimport model from \"./model\";\nimport trainingData from \"./trainingData\";\nimport dataVectors from \"./trainingVectorData\";\nimport dataSets from \"./trainingDataSets\";\nimport training from \"./training\";\nimport job from \"./job\"\n\n// ---\n// REDUCERS\n// ---\n\nexport default function configureStore() {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n\n  // TODO: check to disable by default on prods\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        trace: true,\n      })\n    : compose;\n  const enhancer = applyMiddleware(...middlewares);\n\n  const rootReducer = combineReducers({\n    user,\n  })\n\n  const store = createStore(rootReducer, composeEnhancers(enhancer));\n\n  // to debug without proper extentions\n  if (!getEnvProduction()) {\n    window.store = store;\n  }\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n}\n"]},"metadata":{},"sourceType":"module"}