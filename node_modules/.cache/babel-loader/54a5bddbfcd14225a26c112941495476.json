{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction reducerWithInitialState(initialState) {\n  return makeReducer(initialState);\n}\n\nexports.reducerWithInitialState = reducerWithInitialState;\n\nfunction reducerWithoutInitialState() {\n  return makeReducer();\n}\n\nexports.reducerWithoutInitialState = reducerWithoutInitialState;\n\nfunction upcastingReducer() {\n  return makeReducer();\n}\n\nexports.upcastingReducer = upcastingReducer;\n\nfunction makeReducer(initialState) {\n  var handlersByActionType = {};\n  var reducer = getReducerFunction(initialState, handlersByActionType);\n\n  reducer.caseWithAction = function (actionCreator, handler) {\n    handlersByActionType[actionCreator.type] = handler;\n    return reducer;\n  };\n\n  reducer.case = function (actionCreator, handler) {\n    return reducer.caseWithAction(actionCreator, function (state, action) {\n      return handler(state, action.payload);\n    });\n  };\n\n  reducer.casesWithAction = function (actionCreators, handler) {\n    for (var _i = 0, actionCreators_1 = actionCreators; _i < actionCreators_1.length; _i++) {\n      var actionCreator = actionCreators_1[_i];\n      reducer.caseWithAction(actionCreator, handler);\n    }\n\n    return reducer;\n  };\n\n  reducer.cases = function (actionCreators, handler) {\n    return reducer.casesWithAction(actionCreators, function (state, action) {\n      return handler(state, action.payload);\n    });\n  };\n\n  reducer.withHandling = function (updateBuilder) {\n    return updateBuilder(reducer);\n  };\n\n  reducer.default = function (defaultHandler) {\n    return getReducerFunction(initialState, __assign({}, handlersByActionType), defaultHandler);\n  };\n\n  reducer.build = function () {\n    return getReducerFunction(initialState, __assign({}, handlersByActionType));\n  };\n\n  return reducer;\n}\n\nfunction getReducerFunction(initialState, handlersByActionType, defaultHandler) {\n  return function (passedState, action) {\n    var state = passedState !== undefined ? passedState : initialState;\n    var handler = handlersByActionType[action.type] || defaultHandler;\n    return handler ? handler(state, action) : state;\n  };\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;AAoFA,SAAgBA,uBAAhB,CAA2CC,YAA3C,EAA0D;AACtD,SAAOC,WAAW,CAAsBD,YAAtB,CAAlB;AACH;;AAFDE;;AAIA,SAAgBC,0BAAhB,GAA0C;AACtC,SAAOF,WAAW,EAAlB;AACH;;AAFDC;;AAIA,SAAgBE,gBAAhB,GAAgC;AAK5B,SAAOH,WAAW,EAAlB;AACH;;AANDC;;AAQA,SAASD,WAAT,CACID,YADJ,EACsB;AAElB,MAAMK,oBAAoB,GAEtB,EAFJ;AAGA,MAAMC,OAAO,GAAGC,kBAAkB,CAC9BP,YAD8B,EAE9BK,oBAF8B,CAAlC;;AAKAC,SAAO,CAACE,cAAR,GAAyB,UACrBC,aADqB,EAErBC,OAFqB,EAEiB;AAEtCL,wBAAoB,CAACI,aAAa,CAACE,IAAf,CAApB,GAA2CD,OAA3C;AACA,WAAOJ,OAAP;AACH,GAND;;AAQAA,SAAO,CAACM,IAAR,GAAe,UACXH,aADW,EAEXC,OAFW,EAEmB;AAE9B,kBAAO,CAACF,cAAR,CAAuBC,aAAvB,EAAsC,UAACI,KAAD,EAAQC,MAAR,EAAc;AAChD,oBAAO,CAACD,KAAD,EAAQC,MAAM,CAACC,OAAf,CAAP;AAA8B,KADlC;AAEC,GANL;;AAQAT,SAAO,CAACU,eAAR,GAA0B,UACtBC,cADsB,EAEtBP,OAFsB,EAEgB;AAEtC,SAA4B,6CAA5B,EAA4BQ,4BAA5B,EAA4BA,IAA5B,EAA4C;AAAvC,UAAMT,aAAa,uBAAnB;AACDH,aAAO,CAACE,cAAR,CAAuBC,aAAvB,EAAsCC,OAAtC;AACH;;AACD,WAAOJ,OAAP;AACH,GARD;;AAUAA,SAAO,CAACa,KAAR,GAAgB,UACZF,cADY,EAEZP,OAFY,EAEkB;AAE9B,kBAAO,CAACM,eAAR,CAAwBC,cAAxB,EAAwC,UAACJ,KAAD,EAAQC,MAAR,EAAc;AAClD,oBAAO,CAACD,KAAD,EAAQC,MAAM,CAACC,OAAf,CAAP;AAA8B,KADlC;AAEC,GANL;;AAQAT,SAAO,CAACc,YAAR,GAAuB,UACnBC,aADmB,EAGoB;AACtC,wBAAa,CAACf,OAAD,CAAb;AAAsB,GAJ3B;;AAMAA,SAAO,CAACgB,OAAR,GAAkB,UAACC,cAAD,EAA8C;AAC5D,6BAAkB,CACdvB,YADc,EACFwB,aACPnB,oBADO,CADE,EAGdkB,cAHc,CAAlB;AAIC,GALL;;AAOAjB,SAAO,CAACmB,KAAR,GAAgB;AACZ,6BAAkB,CAACzB,YAAD,EAAawB,aAAOnB,oBAAP,CAAb,CAAlB;AAA6D,GADjE;;AAGA,SAAOC,OAAP;AACH;;AAED,SAASC,kBAAT,CACIP,YADJ,EAEIK,oBAFJ,EAGIkB,cAHJ,EAGkD;AAE9C,SAAO,UAACG,WAAD,EAAuBZ,MAAvB,EAAwC;AAC3C,QAAMD,KAAK,GAAGa,WAAW,KAAKC,SAAhB,GAA4BD,WAA5B,GAA0C1B,YAAxD;AACA,QAAMU,OAAO,GAAGL,oBAAoB,CAACS,MAAM,CAACH,IAAR,CAApB,IAAqCY,cAArD;AACA,WAAOb,OAAO,GACRA,OAAO,CAACG,KAAD,EAAeC,MAAf,CADC,GAEND,KAFR;AAGH,GAND;AAOH","names":["reducerWithInitialState","initialState","makeReducer","exports","reducerWithoutInitialState","upcastingReducer","handlersByActionType","reducer","getReducerFunction","caseWithAction","actionCreator","handler","type","case","state","action","payload","casesWithAction","actionCreators","_i","cases","withHandling","updateBuilder","default","defaultHandler","__assign","build","passedState","undefined"],"sources":["/Users/nikita/testProjectTabel/node_modules/typescript-fsa-reducers/src/index.ts"],"sourcesContent":["import { Action, ActionCreator, AnyAction } from \"typescript-fsa\";\n\nexport interface ReducerBuilder<InS, OutS = InS, PassedS = InS | undefined> {\n    case<P>(\n        actionCreator: ActionCreator<P>,\n        handler: Handler<InS, OutS, P>,\n    ): ReducerBuilder<InS, OutS, PassedS>;\n    caseWithAction<P>(\n        actionCreator: ActionCreator<P>,\n        handler: Handler<InS, OutS, Action<P>>,\n    ): ReducerBuilder<InS, OutS, PassedS>;\n\n    // cases variadic overloads\n    cases<P1, P2>(\n        actionCreators: [ActionCreator<P1>, ActionCreator<P2>],\n        handler: Handler<InS, OutS, P1 | P2>,\n    ): ReducerBuilder<InS, OutS, PassedS>;\n    cases<P1, P2, P3>(\n        actionCreators: [\n            ActionCreator<P1>,\n            ActionCreator<P2>,\n            ActionCreator<P3>,\n        ],\n        handler: Handler<InS, OutS, P1 | P2 | P3>,\n    ): ReducerBuilder<InS, OutS, PassedS>;\n    cases<P1, P2, P3, P4>(\n        actionCreators: [\n            ActionCreator<P1>,\n            ActionCreator<P2>,\n            ActionCreator<P3>,\n            ActionCreator<P4>,\n        ],\n        handler: Handler<InS, OutS, P1 | P2 | P3 | P4>,\n    ): ReducerBuilder<InS, OutS, PassedS>;\n    cases<P>(\n        actionCreators: Array<ActionCreator<P>>,\n        handler: Handler<InS, OutS, P>,\n    ): ReducerBuilder<InS, OutS, PassedS>;\n\n    // casesWithAction variadic overloads\n    casesWithAction<P1, P2>(\n        actionCreators: [ActionCreator<P1>, ActionCreator<P2>],\n        handler: Handler<InS, OutS, Action<P1 | P2>>,\n    ): ReducerBuilder<InS, OutS, PassedS>;\n    casesWithAction<P1, P2, P3>(\n        actionCreators: [\n            ActionCreator<P1>,\n            ActionCreator<P2>,\n            ActionCreator<P3>,\n        ],\n        handler: Handler<InS, OutS, Action<P1 | P2 | P3>>,\n    ): ReducerBuilder<InS, OutS, PassedS>;\n    casesWithAction<P1, P2, P3, P4>(\n        actionCreators: [\n            ActionCreator<P1>,\n            ActionCreator<P2>,\n            ActionCreator<P3>,\n            ActionCreator<P4>,\n        ],\n        handler: Handler<InS, OutS, Action<P1 | P2 | P3 | P4>>,\n    ): ReducerBuilder<InS, OutS, PassedS>;\n    casesWithAction<P>(\n        actionCreators: Array<ActionCreator<P>>,\n        handler: Handler<InS, OutS, Action<P>>,\n    ): ReducerBuilder<InS, OutS, PassedS>;\n\n    withHandling(\n        updateBuilder: (\n            builder: ReducerBuilder<InS, OutS, PassedS>,\n        ) => ReducerBuilder<InS, OutS, PassedS>,\n    ): ReducerBuilder<InS, OutS, PassedS>;\n\n    // Intentionally avoid AnyAction in return type so packages can export\n    // reducers created using .default() or .build() without consumers requiring\n    // a dependency on typescript-fsa.\n    default(\n        defaultHandler: Handler<InS, OutS, AnyAction>,\n    ): (state: PassedS, action: { type: any }) => OutS;\n    build(): (state: PassedS, action: { type: any }) => OutS;\n    (state: PassedS, action: AnyAction): OutS;\n}\n\nexport type Handler<InS, OutS, P> = (state: InS, payload: P) => OutS;\n\nexport function reducerWithInitialState<S>(initialState: S): ReducerBuilder<S> {\n    return makeReducer<S, S, S | undefined>(initialState);\n}\n\nexport function reducerWithoutInitialState<S>(): ReducerBuilder<S, S, S> {\n    return makeReducer<S, S, S>();\n}\n\nexport function upcastingReducer<InS extends OutS, OutS>(): ReducerBuilder<\n    InS,\n    OutS,\n    InS\n> {\n    return makeReducer<InS, OutS, InS>();\n}\n\nfunction makeReducer<InS, OutS, PassedS>(\n    initialState?: InS,\n): ReducerBuilder<InS, OutS, PassedS> {\n    const handlersByActionType: {\n        [actionType: string]: Handler<InS, OutS, any>;\n    } = {};\n    const reducer = getReducerFunction(\n        initialState,\n        handlersByActionType,\n    ) as ReducerBuilder<InS, OutS, PassedS>;\n\n    reducer.caseWithAction = <P>(\n        actionCreator: ActionCreator<P>,\n        handler: Handler<InS, OutS, Action<P>>,\n    ) => {\n        handlersByActionType[actionCreator.type] = handler;\n        return reducer;\n    };\n\n    reducer.case = <P>(\n        actionCreator: ActionCreator<P>,\n        handler: Handler<InS, OutS, P>,\n    ) =>\n        reducer.caseWithAction(actionCreator, (state, action) =>\n            handler(state, action.payload),\n        );\n\n    reducer.casesWithAction = <P>(\n        actionCreators: Array<ActionCreator<P>>,\n        handler: Handler<InS, OutS, Action<P>>,\n    ) => {\n        for (const actionCreator of actionCreators) {\n            reducer.caseWithAction(actionCreator, handler);\n        }\n        return reducer;\n    };\n\n    reducer.cases = <P>(\n        actionCreators: Array<ActionCreator<P>>,\n        handler: Handler<InS, OutS, P>,\n    ) =>\n        reducer.casesWithAction(actionCreators, (state, action) =>\n            handler(state, action.payload),\n        );\n\n    reducer.withHandling = (\n        updateBuilder: (\n            builder: ReducerBuilder<InS, OutS, PassedS>,\n        ) => ReducerBuilder<InS, OutS, PassedS>,\n    ) => updateBuilder(reducer);\n\n    reducer.default = (defaultHandler: Handler<InS, OutS, AnyAction>) =>\n        getReducerFunction<InS, OutS, PassedS>(\n            initialState,\n            { ...handlersByActionType },\n            defaultHandler,\n        );\n\n    reducer.build = () =>\n        getReducerFunction(initialState, { ...handlersByActionType });\n\n    return reducer;\n}\n\nfunction getReducerFunction<InS, OutS, PassedS>(\n    initialState: InS | undefined,\n    handlersByActionType: { [actionType: string]: Handler<InS, OutS, any> },\n    defaultHandler?: Handler<InS, OutS, AnyAction>,\n) {\n    return (passedState: PassedS, action: AnyAction) => {\n        const state = passedState !== undefined ? passedState : initialState;\n        const handler = handlersByActionType[action.type] || defaultHandler;\n        return handler\n            ? handler(state as InS, action)\n            : ((state as unknown) as OutS);\n    };\n}\n"]},"metadata":{},"sourceType":"script"}