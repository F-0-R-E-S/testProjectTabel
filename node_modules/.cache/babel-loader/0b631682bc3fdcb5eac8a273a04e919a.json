{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/testProjectTabel/src/modules/header/components/headerMenu.tsx\";\nimport { forwardRef } from 'react';\nimport { Group, Avatar, Text, Menu, UnstyledButton } from '@mantine/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserButtonInfo = /*#__PURE__*/forwardRef(_c = (_ref, ref) => {\n  let {\n    image,\n    name,\n    email,\n    ...others\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(UnstyledButton, {\n    ref: ref,\n    sx: theme => ({\n      display: 'block',\n      width: '100%',\n      padding: '0px',\n      '&:hover': {\n        backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[8] : theme.colors.gray[0]\n      }\n    }),\n    ...others,\n    children: /*#__PURE__*/_jsxDEV(Group, {\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: image,\n        radius: \"xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          size: \"sm\",\n          weight: 500,\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          color: \"dimmed\",\n          size: \"xs\",\n          children: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faChevronRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n});\n_c2 = UserButtonInfo;\nexport function UserButton(_ref2) {\n  let {\n    logoutRedirect,\n    getUserCoin,\n    image,\n    name,\n    email\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Group, {\n    position: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Menu, {\n      gutter: 0,\n      withArrow: true,\n      placement: \"center\",\n      control: /*#__PURE__*/_jsxDEV(UserButtonInfo, {\n        image: image,\n        name: name,\n        email: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n        component: Link,\n        to: \"/data/images\",\n        children: \"Data Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        onClick: () => {\n          window.open(\"https://api.rexy.ai/api\", '_blank');\n        },\n        children: \"API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        onClick: () => getUserCoin(),\n        children: \"Copy Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        onClick: () => {\n          window.open(\"https://rexy.ai/\", '_blank');\n        },\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        onClick: () => logoutRedirect(),\n        children: \"Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_c3 = UserButton;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"UserButtonInfo$forwardRef\");\n$RefreshReg$(_c2, \"UserButtonInfo\");\n$RefreshReg$(_c3, \"UserButton\");","map":{"version":3,"sources":["/Users/nikita/testProjectTabel/src/modules/header/components/headerMenu.tsx"],"names":["forwardRef","Group","Avatar","Text","Menu","UnstyledButton","FontAwesomeIcon","faChevronRight","Link","UserButtonInfo","ref","image","name","email","others","theme","display","width","padding","backgroundColor","colorScheme","colors","dark","gray","flex","UserButton","logoutRedirect","getUserCoin","window","open"],"mappings":"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","sourcesContent":["import { forwardRef } from 'react';\nimport { Group, Avatar, Text, Menu, UnstyledButton, UnstyledButtonProps } from '@mantine/core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\n\ninterface UserButtonProps extends UnstyledButtonProps {\n    \n    image: string;\n    name: string;\n    email: string;\n}\n\ninterface UserButtonPropsInfo extends UnstyledButtonProps {\n    getUserCoin: Function;\n    logoutRedirect: Function;\n    image: string;\n    name: string;\n    email: string;\n}\n\n\nexport const UserButtonInfo = forwardRef<HTMLButtonElement, UserButtonProps>(\n    ({ image, name, email, ...others }: UserButtonProps, ref) => (\n        <UnstyledButton\n            ref={ref}\n            sx={(theme) => ({\n                display: 'block',\n                width: '100%',\n                padding: '0px',\n                '&:hover': {\n                    backgroundColor:\n                        theme.colorScheme === 'dark' ? theme.colors.dark[8] : theme.colors.gray[0],\n                },\n            })}\n            {...others}\n        >\n            <Group>\n                <Avatar src={image} radius=\"xl\" />\n\n                <div style={{ flex: 1 }}>\n                    <Text size=\"sm\" weight={500}>\n                        {name}\n                    </Text>\n\n                    <Text color=\"dimmed\" size=\"xs\">\n                        {email}\n                    </Text>\n                </div>\n\n                <FontAwesomeIcon icon={faChevronRight  as IconProp} />\n            </Group>\n        </UnstyledButton>\n    )\n);\n\nexport function UserButton({ logoutRedirect, getUserCoin, image, name, email }: UserButtonPropsInfo) {\n    return (\n        <Group position=\"center\">\n            <Menu\n                gutter={0}\n                withArrow\n                placement=\"center\"\n                control={\n                    <UserButtonInfo\n                        image={image}\n                        name={name}\n                        email={email}\n                    />\n                }\n            >\n                    <Menu.Item component={Link} to=\"/data/images\" >\n                        Data Management\n                    </Menu.Item>\n\n                    <Menu.Item\n                        onClick={() => {window.open(\"https://api.rexy.ai/api\", '_blank')}}\n                    >\n                        API\n                    </Menu.Item>\n                    \n                    <Menu.Item\n                        onClick={() => getUserCoin()}\n                    >\n                        Copy Token\n                    </Menu.Item>\n\n                    <Menu.Item\n                        onClick={() => {window.open(\"https://rexy.ai/\", '_blank')}}\n                    >\n                        About\n                    </Menu.Item>\n\n                    <Menu.Item\n                        onClick={() => logoutRedirect()}\n                    >\n                        Log Out\n                    </Menu.Item>\n                    \n            </Menu>\n        </Group>\n    );\n}"]},"metadata":{},"sourceType":"module"}