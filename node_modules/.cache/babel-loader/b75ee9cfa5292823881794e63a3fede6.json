{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/testProjectTabel/src/modules/main/components/mainTabel.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useMemo } from \"react\";\nimport { usePagination, useTable } from \"react-table\";\nimport { format } from \"date-fns\";\nimport styled from \"styled-components\";\nimport { Loader } from \"@mantine/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MainTabel = _ref => {\n  _s();\n\n  let {\n    users,\n    loading,\n    pageCount: controlledPageCount,\n    fetchData\n  } = _ref;\n  const data = users;\n  const columns = useMemo(() => [{\n    Header: 'ID',\n    accessor: 'ID',\n    // accessor is the \"key\" in the data\n    width: 130,\n    Cell: _ref2 => {\n      let {\n        value\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#7E8298'\n        },\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 43\n      }, this);\n    }\n  }, {\n    Header: 'Имя',\n    accessor: 'FirstName',\n    // accessor is the \"key\" in the data\n    Cell: _ref3 => {\n      let {\n        value\n      } = _ref3;\n      return value.length > 6 ? /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#7E8298'\n        },\n        children: value.slice(0, 6) + '...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 62\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#7E8298'\n        },\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 134\n      }, this);\n    }\n  }, {\n    Header: 'Город',\n    accessor: 'City',\n    // accessor is the \"key\" in the data\n    Cell: _ref4 => {\n      let {\n        value\n      } = _ref4;\n      return value.length > 6 ? /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#7E8298'\n        },\n        children: value.slice(0, 6) + '...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 62\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#7E8298'\n        },\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 134\n      }, this);\n    }\n  }, {\n    Header: `Активность роботов (кол-во)`,\n    accessor: 'Orientation',\n    // accessor is the \"key\" in the data\n    Cell: _ref5 => {\n      let {\n        value\n      } = _ref5;\n      return `активно (${value})`;\n    }\n  }, {\n    Header: 'Сумма счетов',\n    accessor: 'ScansInPeriod' // accessor is the \"key\" in the data\n\n  }, {\n    Header: 'Прибыль',\n    accessor: 'VIP' // accessor is the \"key\" in the data\n\n  }, {\n    Header: 'Дата регистрации',\n    accessor: 'CreatedAt',\n    // accessor is the \"key\" in the data\n    Cell: _ref6 => {\n      let {\n        value\n      } = _ref6;\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#7E8298'\n        },\n        children: format(new Date(value), `dd.MM.yyyy`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 43\n      }, this);\n    }\n  }, {\n    Header: 'Комиссия',\n    accessor: 'Ban' // accessor is the \"key\" in the data\n\n  }, {\n    Header: 'Статус плательщика',\n    accessor: 'State',\n    // accessor is the \"key\" in the data\n    Cell: _ref7 => {\n      let {\n        value\n      } = _ref7;\n      return /*#__PURE__*/_jsxDEV(TabelBodyItemTdSpan, {\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 43\n      }, this);\n    }\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    state: {\n      pageIndex\n    }\n  } = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 0\n    },\n    manualPagination: true,\n    pageCount: controlledPageCount\n  }, usePagination);\n  useEffect(() => {\n    fetchData({\n      pageIndex\n    });\n  }, [fetchData, pageIndex]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading ? /*#__PURE__*/_jsxDEV(LoaderContainer, {\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        color: \"#7242E6\",\n        size: 'md',\n        variant: 'dots'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Tabel, { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(TabelHeader, {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(TabelHeaderItem, { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(TabelHeaderItemTh, { ...column.getHeaderProps(),\n            children: [\" \", column.render('Header'), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this), users.length ? /*#__PURE__*/_jsxDEV(TabelBody, { ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(TabelBodyItem, { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(TabelBodyItemTd, { ...cell.getCellProps(),\n                children: [\" \", cell.render('Cell')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 49\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 37\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043D\\u0435\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => previousPage(),\n        disabled: !canPreviousPage,\n        children: '<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => nextPage(),\n        disabled: !canNextPage,\n        children: '>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MainTabel, \"QP6CZF9eS4siuXM5ggvWg8DYCdM=\", false, function () {\n  return [useTable];\n});\n\n_c = MainTabel;\nconst Tabel = styled.table`\n    width: 100%;\n`;\n_c2 = Tabel;\nconst TabelBody = styled.tbody`\n\n`;\n_c3 = TabelBody;\nconst TabelBodyItem = styled.tr`\n\n`;\n_c4 = TabelBodyItem;\nconst TabelBodyItemTd = styled.td`\nfont-family: 'Gilroy Bold';\nfont-style: normal;\nfont-weight: 700;\nfont-size: 15px;\ntext-align: left;\ncolor: #000000;\npadding: 19px 15px;\nborder-bottom: 1px dashed #E1E6EC;\nmax-width: 105px;\n`;\n_c5 = TabelBodyItemTd;\nconst TabelBodyItemTdSpan = styled.span`\nbackground: rgb(255, 245, 248);\n    border-radius: 7px;\n    padding: 6px 13px;\n    color: #EE446E;\n    font-size: 14px;\n`;\n_c6 = TabelBodyItemTdSpan;\nconst TabelHeader = styled.thead`\nborder: 1px dashed #E1E6EC;\npadding: 11px 33px;\n`;\n_c7 = TabelHeader;\nconst TabelHeaderItem = styled.tr`\n\n`;\n_c8 = TabelHeaderItem;\nconst TabelHeaderItemTh = styled.th`\nfont-family: 'Gilroy Bold';\nfont-style: normal;\nfont-weight: 700;\nfont-size: 12px;\nline-height: 15px;\ntext-align: left;\ntext-transform: uppercase;\ncolor: #B5B5C3;\nvertical-align: top;\nborder-bottom: 1px dashed #E1E6EC;\npadding-bottom: 11px;\npadding-left: 15px;\npadding-right: 15px;\n`;\n_c9 = TabelHeaderItemTh;\nconst LoaderContainer = styled.div`\n    text-align: center;\n    padding: 50px;\n`;\n_c10 = LoaderContainer;\nexport default MainTabel;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"MainTabel\");\n$RefreshReg$(_c2, \"Tabel\");\n$RefreshReg$(_c3, \"TabelBody\");\n$RefreshReg$(_c4, \"TabelBodyItem\");\n$RefreshReg$(_c5, \"TabelBodyItemTd\");\n$RefreshReg$(_c6, \"TabelBodyItemTdSpan\");\n$RefreshReg$(_c7, \"TabelHeader\");\n$RefreshReg$(_c8, \"TabelHeaderItem\");\n$RefreshReg$(_c9, \"TabelHeaderItemTh\");\n$RefreshReg$(_c10, \"LoaderContainer\");","map":{"version":3,"sources":["/Users/nikita/testProjectTabel/src/modules/main/components/mainTabel.tsx"],"names":["useEffect","useMemo","usePagination","useTable","format","styled","Loader","MainTabel","users","loading","pageCount","controlledPageCount","fetchData","data","columns","Header","accessor","width","Cell","value","color","length","slice","Date","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","page","canPreviousPage","canNextPage","pageOptions","gotoPage","nextPage","previousPage","state","pageIndex","initialState","manualPagination","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","Tabel","table","TabelBody","tbody","TabelBodyItem","tr","TabelBodyItemTd","td","TabelBodyItemTdSpan","span","TabelHeader","thead","TabelHeaderItem","TabelHeaderItemTh","th","LoaderContainer","div"],"mappings":"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","sourcesContent":["import { useEffect, useMemo } from \"react\"\nimport { usePagination, useTable } from \"react-table\"\nimport { format } from \"date-fns\";\nimport styled from \"styled-components\";\nimport { Loader } from \"@mantine/core\";\n\ntype Props = {\n    users: any\n    loading: boolean\n    pageCount: number\n    fetchData: Function\n}\n\nconst MainTabel = ({ users, loading, pageCount: controlledPageCount, fetchData }: Props) => {\n\n    const data = users\n\n\n    const columns: any = useMemo(\n        () => [\n            {\n                Header: 'ID',\n                accessor: 'ID', // accessor is the \"key\" in the data\n                width: 130,\n                Cell: ({ value }: any) => <span style={{ color: '#7E8298' }}>{value}</span>\n            },\n            {\n                Header: 'Имя',\n                accessor: 'FirstName', // accessor is the \"key\" in the data\n                Cell: ({ value }: any) => value.length > 6 ? <span style={{ color: '#7E8298' }}>{value.slice(0, 6) + '...'}</span> : <span style={{ color: '#7E8298' }}>{value}</span>\n            },\n            {\n                Header: 'Город',\n                accessor: 'City', // accessor is the \"key\" in the data\n                Cell: ({ value }: any) => value.length > 6 ? <span style={{ color: '#7E8298' }}>{value.slice(0, 6) + '...'}</span> : <span style={{ color: '#7E8298' }}>{value}</span>\n            },\n            {\n                Header: `Активность роботов (кол-во)`,\n                accessor: 'Orientation', // accessor is the \"key\" in the data\n                Cell: ({ value }: any) => `активно (${value})`\n            },\n            {\n                Header: 'Сумма счетов',\n                accessor: 'ScansInPeriod', // accessor is the \"key\" in the data\n            },\n            {\n                Header: 'Прибыль',\n                accessor: 'VIP', // accessor is the \"key\" in the data\n            },\n            {\n                Header: 'Дата регистрации',\n                accessor: 'CreatedAt', // accessor is the \"key\" in the data\n                Cell: ({ value }: any) => <span style={{ color: '#7E8298' }}>{format(new Date(value), `dd.MM.yyyy`)}</span>\n            },\n            {\n                Header: 'Комиссия',\n                accessor: 'Ban', // accessor is the \"key\" in the data\n            },\n            {\n                Header: 'Статус плательщика',\n                accessor: 'State', // accessor is the \"key\" in the data\n                Cell: ({ value }: any) => <TabelBodyItemTdSpan>{value}</TabelBodyItemTdSpan>\n\n            },\n        ],\n        []\n    )\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        page,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        state: { pageIndex },\n    } = useTable({\n        columns,\n        data,\n        initialState: { pageIndex: 0 },\n        manualPagination: true,\n        pageCount: controlledPageCount,\n    },\n        usePagination\n    )\n\n    useEffect(() => {\n        fetchData({ pageIndex })\n    }, [fetchData, pageIndex])\n\n    return (\n        <>\n            {loading ?\n                <LoaderContainer>\n                    <Loader color=\"#7242E6\" size={'md'} variant={'dots'} />\n                </LoaderContainer>\n                :\n\n                <Tabel {...getTableProps()}>\n                    <TabelHeader>\n                        {headerGroups.map(headerGroup => (\n                            <TabelHeaderItem {...headerGroup.getHeaderGroupProps()}>\n                                {headerGroup.headers.map(column => (\n                                    <TabelHeaderItemTh {...column.getHeaderProps()}> {column.render('Header')} </TabelHeaderItemTh>\n                                ))}\n                            </TabelHeaderItem>\n                        ))}\n                    </TabelHeader>\n                    {users.length ?\n                        <TabelBody {...getTableBodyProps()}>\n                            {rows.map(row => {\n                                prepareRow(row)\n                                return (\n                                    <TabelBodyItem {...row.getRowProps()}>\n                                        {row.cells.map(cell => {\n                                            return (\n                                                <TabelBodyItemTd {...cell.getCellProps()}> {cell.render('Cell')}</TabelBodyItemTd>\n                                            )\n                                        })}\n                                    </TabelBodyItem>\n                                )\n                            })\n                            }\n                        </TabelBody>\n                        :\n                        <p>Данных нет</p>\n                    }\n\n                </Tabel>\n            }\n\n            <div className=\"pagination\">\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                    {'<'}\n                </button>{' '}\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    {'>'}\n                </button>{' '}\n\n            </div>\n        </>\n    )\n}\n\n\nconst Tabel = styled.table`\n    width: 100%;\n`;\n\nconst TabelBody = styled.tbody`\n\n`;\n\nconst TabelBodyItem = styled.tr`\n\n`;\n\nconst TabelBodyItemTd = styled.td`\nfont-family: 'Gilroy Bold';\nfont-style: normal;\nfont-weight: 700;\nfont-size: 15px;\ntext-align: left;\ncolor: #000000;\npadding: 19px 15px;\nborder-bottom: 1px dashed #E1E6EC;\nmax-width: 105px;\n`;\n\nconst TabelBodyItemTdSpan = styled.span`\nbackground: rgb(255, 245, 248);\n    border-radius: 7px;\n    padding: 6px 13px;\n    color: #EE446E;\n    font-size: 14px;\n`;\n\nconst TabelHeader = styled.thead`\nborder: 1px dashed #E1E6EC;\npadding: 11px 33px;\n`;\n\nconst TabelHeaderItem = styled.tr`\n\n`;\n\nconst TabelHeaderItemTh = styled.th`\nfont-family: 'Gilroy Bold';\nfont-style: normal;\nfont-weight: 700;\nfont-size: 12px;\nline-height: 15px;\ntext-align: left;\ntext-transform: uppercase;\ncolor: #B5B5C3;\nvertical-align: top;\nborder-bottom: 1px dashed #E1E6EC;\npadding-bottom: 11px;\npadding-left: 15px;\npadding-right: 15px;\n`;\n\nconst LoaderContainer = styled.div`\n    text-align: center;\n    padding: 50px;\n`;\n\nexport default MainTabel\n"]},"metadata":{},"sourceType":"module"}