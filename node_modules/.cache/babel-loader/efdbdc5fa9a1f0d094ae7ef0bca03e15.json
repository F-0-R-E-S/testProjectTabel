{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/testProjectTabel/src/App.tsx\";\nimport React, { Fragment } from \"react\";\nimport \"./App.css\";\nimport { Toaster } from 'react-hot-toast';\nimport RoutesSPA from \"./route\";\nimport configureStore from \"./store\";\nimport { Provider } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst store = configureStore();\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toaster, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(RoutesSPA, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nikita/testProjectTabel/src/App.tsx"],"names":["React","Fragment","Toaster","RoutesSPA","configureStore","Provider","store","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,SAAP,MAAsB,SAAtB;AACA,OAAOC,cAAP,MAA2B,SAA3B;AACA,SAASC,QAAT,QAAyB,aAAzB;;AAEA,MAAMC,KAAK,GAAGF,cAAc,EAA5B;;AAEA,SAASG,GAAT,GAAe;AAGb,sBACI,QAAC,QAAD;AAAA,4BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAED,KAAjB;AAAA,6BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQD;;KAXQC,G;AAaT,eAAeA,GAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport \"./App.css\";\nimport { Toaster } from 'react-hot-toast';\nimport RoutesSPA from \"./route\";\nimport configureStore from \"./store\";\nimport { Provider } from 'react-redux'\n\nconst store = configureStore()\n\nfunction App() {\n\n\n  return (\n      <Fragment>\n        <Toaster />\n        <Provider store={store}>\n          <RoutesSPA />\n        </Provider>\n      </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}