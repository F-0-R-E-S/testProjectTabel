{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/testProjectTabel/src/provider/AxiosProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Axios from \"axios\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AxiosContextProgress = /*#__PURE__*/React.createContext(0);\n\nconst AxiosProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    getAccessTokenSilently\n  } = useAuth0();\n  const [uploadProgress, setUploadProgress] = useState(0);\n  Axios.interceptors.request.use(async config => {\n    config.onUploadProgress = progressEvent => setUploadProgress(progressEvent.loaded);\n\n    const accessToken = await getAccessTokenSilently();\n    config.headers.Authorization = `Bearer ${accessToken}`;\n    console.log(accessToken);\n    alert('f');\n    return config;\n  });\n  Axios.interceptors.response.use(function (response) {\n    setUploadProgress(0);\n    return response;\n  }, function (error) {\n    // Do something with response error\n    return Promise.reject(error);\n  });\n  return /*#__PURE__*/_jsxDEV(AxiosContextProgress.Provider, {\n    value: uploadProgress,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AxiosProvider, \"21k5wSeY5GybruE3R96pjwal92U=\", false, function () {\n  return [useAuth0];\n});\n\n_c = AxiosProvider;\nAxiosProvider.defaultProps = {};\nAxiosProvider.propTypes = {\n  // getAccessTokenSilently: PropTypes.func.isRequired,\n  // instance: PropTypes.func.isRequired,\n  children: PropTypes.any.isRequired\n};\nexport default AxiosProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AxiosProvider\");","map":{"version":3,"sources":["/Users/nikita/testProjectTabel/src/provider/AxiosProvider.tsx"],"names":["React","useState","PropTypes","Axios","useAuth0","AxiosContextProgress","createContext","AxiosProvider","children","getAccessTokenSilently","uploadProgress","setUploadProgress","interceptors","request","use","config","onUploadProgress","progressEvent","loaded","accessToken","headers","Authorization","console","log","alert","response","error","Promise","reject","defaultProps","propTypes","any","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,OAAO,MAAMC,oBAAoB,gBAAGL,KAAK,CAACM,aAAN,CAA4B,CAA5B,CAA7B;;AAIP,MAAMC,aAAwB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACjD,QAAM;AAAEC,IAAAA;AAAF,MAA6BL,QAAQ,EAA3C;AAEA,QAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAS,CAAT,CAApD;AAEAE,EAAAA,KAAK,CAACS,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,MAAOC,MAAP,IAAkB;AAC/CA,IAAAA,MAAM,CAACC,gBAAP,GAA2BC,aAAD,IACxBN,iBAAiB,CAACM,aAAa,CAACC,MAAf,CADnB;;AAGE,UAAMC,WAAW,GAAG,MAAMV,sBAAsB,EAAhD;AACAM,IAAAA,MAAM,CAAEK,OAAR,CAAiBC,aAAjB,GAAkC,UAASF,WAAY,EAAvD;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACAK,IAAAA,KAAK,CAAC,GAAD,CAAL;AACF,WAAOT,MAAP;AACD,GATD;AAWAZ,EAAAA,KAAK,CAACS,YAAN,CAAmBa,QAAnB,CAA4BX,GAA5B,CACE,UAAUW,QAAV,EAAoB;AAClBd,IAAAA,iBAAiB,CAAC,CAAD,CAAjB;AACA,WAAOc,QAAP;AACD,GAJH,EAKE,UAAUC,KAAV,EAAiB;AACf;AACA,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,GARH;AAWA,sBACE,QAAC,oBAAD,CAAsB,QAAtB;AAA+B,IAAA,KAAK,EAAEhB,cAAtC;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhCD;;GAAMD,a;UAC+BH,Q;;;KAD/BG,a;AAkCNA,aAAa,CAACsB,YAAd,GAA6B,EAA7B;AAEAtB,aAAa,CAACuB,SAAd,GAA0B;AACxB;AACA;AACAtB,EAAAA,QAAQ,EAAEN,SAAS,CAAC6B,GAAV,CAAcC;AAHA,CAA1B;AAMA,eAAezB,aAAf","sourcesContent":["import React, { FC, ReactNode, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Axios from \"axios\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nexport const AxiosContextProgress = React.createContext<number>(0);\ninterface Props {\n  children: ReactNode;\n}\nconst AxiosProvider: FC<Props> = ({ children }) => {\n  const { getAccessTokenSilently } = useAuth0();\n\n  const [uploadProgress, setUploadProgress] = useState<number>(0);\n\n  Axios.interceptors.request.use(async (config) => {\n    config.onUploadProgress = (progressEvent) =>\n      setUploadProgress(progressEvent.loaded);\n\n      const accessToken = await getAccessTokenSilently();\n      config!.headers!.Authorization = `Bearer ${accessToken}`;\n      console.log(accessToken)\n      alert('f')\n    return config;\n  });\n\n  Axios.interceptors.response.use(\n    function (response) {\n      setUploadProgress(0);\n      return response;\n    },\n    function (error) {\n      // Do something with response error\n      return Promise.reject(error);\n    }\n  );\n\n  return (\n    <AxiosContextProgress.Provider value={uploadProgress}>\n      {children}\n    </AxiosContextProgress.Provider>\n  );\n};\n\nAxiosProvider.defaultProps = {};\n\nAxiosProvider.propTypes = {\n  // getAccessTokenSilently: PropTypes.func.isRequired,\n  // instance: PropTypes.func.isRequired,\n  children: PropTypes.any.isRequired,\n};\n\nexport default AxiosProvider;\n"]},"metadata":{},"sourceType":"module"}