{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n\nvar tslib_1 = require(\"tslib\");\n\nvar effects_1 = require(\"redux-saga/effects\");\n\nfunction bindAsyncAction(actionCreator, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return function (worker) {\n    function boundAsyncActionSaga(params) {\n      var _i, result, error_1;\n\n      var args = [];\n\n      for (_i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n      }\n\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!options.skipStartedAction) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , effects_1.put(actionCreator.started(params))];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 5, 7, 11]);\n\n            return [4\n            /*yield*/\n            , effects_1.call.apply(void 0, [worker, params].concat(args))];\n\n          case 3:\n            result = _a.sent();\n            return [4\n            /*yield*/\n            , effects_1.put(actionCreator.done({\n              params: params,\n              result: result\n            }))];\n\n          case 4:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , result];\n\n          case 5:\n            error_1 = _a.sent();\n            return [4\n            /*yield*/\n            , effects_1.put(actionCreator.failed({\n              params: params,\n              error: error_1\n            }))];\n\n          case 6:\n            _a.sent();\n\n            throw error_1;\n\n          case 7:\n            return [4\n            /*yield*/\n            , effects_1.cancelled()];\n\n          case 8:\n            if (!_a.sent()) return [3\n            /*break*/\n            , 10];\n            return [4\n            /*yield*/\n            , effects_1.put(actionCreator.failed({\n              params: params,\n              error: 'cancelled'\n            }))];\n\n          case 9:\n            _a.sent();\n\n            _a.label = 10;\n\n          case 10:\n            return [7\n            /*endfinally*/\n            ];\n\n          case 11:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    }\n\n    var capName = worker.name.charAt(0).toUpperCase() + worker.name.substring(1);\n    return setFunctionName(boundAsyncActionSaga, \"bound\" + capName + \"(\" + actionCreator.type + \")\");\n  };\n}\n\nexports.bindAsyncAction = bindAsyncAction;\n/**\n * Set function name.\n *\n * Note that this won't have effect on built-in Chrome stack traces, although\n * useful for stack traces generated by `redux-saga`.\n */\n\nfunction setFunctionName(func, name) {\n  try {\n    Object.defineProperty(func, 'name', {\n      value: name,\n      configurable: true\n    });\n  } catch (e) {// ignore\n  }\n\n  return func;\n}","map":{"version":3,"mappings":";;;;;;AAEA;;AAwBA,SAAgBA,eAAhB,CACEC,aADF,EAEEC,OAFF,EAEsC;AAApC;AAAAA;AAAoC;;AAEpC,SAAO,UACLC,MADK,EAC+D;AAEpE,aAAUC,oBAAV,CAA+BC,MAA/B,EAA0C;;;AAAE;;mBAAAC,6BAAc;AAAdC;;;;;;iBACtC,CAACL,OAAO,CAACM,mBAAT;AAAA;AAAA;AACF;AAAA;AAAA,cAAMC,cAAIR,aAAa,CAACS,OAAd,CAAsBL,MAAtB,CAAJ,CAAN;;;AAAAM;;;;;;;AAIe;AAAA;AAAA,cAAOF,eAAYG,KAAZ,CAAY,MAAZ,EAAY,CAACT,MAAD,EAASE,MAAT,EAAeQ,MAAf,CAAoBN,IAApB,CAAZ,CAAP;;;AAATO,kBAAM,GAAGH,SAAT;AACN;AAAA;AAAA,cAAMF,cAAIR,aAAa,CAACc,IAAd,CAAmB;AAACV,oBAAM,QAAP;AAASS,oBAAM;AAAf,aAAnB,CAAJ,CAAN;;;AAAAH;;AACA;AAAA;AAAA,cAAOG,MAAP;;;;AAEA;AAAA;AAAA,cAAML,cAAIR,aAAa,CAACe,MAAd,CAAqB;AAACX,oBAAM,QAAP;AAASY,mBAAK;AAAd,aAArB,CAAJ,CAAN;;;AAAAN;;AACA,kBAAMO,OAAN;;;AAEI;AAAA;AAAA,cAAMT,qBAAN;;;iBAAAE;AAAA;AAAA;AACF;AAAA;AAAA,cAAMF,cAAIR,aAAa,CAACe,MAAd,CAAqB;AAACX,oBAAM,QAAP;AAASY,mBAAK,EAAE;AAAhB,aAArB,CAAJ,CAAN;;;AAAAN;;;;;;;;;;;;;;;AAGL;;AAED,QAAMQ,OAAO,GACXhB,MAAM,CAACiB,IAAP,CAAYC,MAAZ,CAAmB,CAAnB,EAAsBC,WAAtB,KAAsCnB,MAAM,CAACiB,IAAP,CAAYG,SAAZ,CAAsB,CAAtB,CADxC;AAGA,WAAOC,eAAe,CACpBpB,oBADoB,EAEpB,UAAQe,OAAR,GAAe,GAAf,GAAmBlB,aAAa,CAACwB,IAAjC,GAAqC,GAFjB,CAAtB;AAID,GA7BD;AA8BD;;AAlCDC;AAoCA;;;;;;;AAMA,SAASF,eAAT,CAA6CG,IAA7C,EAAsDP,IAAtD,EAAkE;AAChE,MAAI;AACFQ,UAAM,CAACC,cAAP,CAAsBF,IAAtB,EAA4B,MAA5B,EAAoC;AAClCG,WAAK,EAAEV,IAD2B;AAElCW,kBAAY,EAAE;AAFoB,KAApC;AAID,GALD,CAKE,OAAOC,CAAP,EAAU,CACV;AACD;;AAED,SAAOL,IAAP;AACD","names":["bindAsyncAction","actionCreator","options","worker","boundAsyncActionSaga","params","_i","args","skipStartedAction","effects_1","started","_a","apply","concat","result","done","failed","error","error_1","capName","name","charAt","toUpperCase","substring","setFunctionName","type","exports","func","Object","defineProperty","value","configurable","e"],"sources":["/Users/nikita/testProjectTabel/node_modules/typescript-fsa-redux-saga/src/index.ts"],"sourcesContent":["import {AsyncActionCreators} from 'typescript-fsa';\nimport {SagaIterator} from 'redux-saga';\nimport {put, call, cancelled} from 'redux-saga/effects';\n\nexport interface BindAsyncActionOptions {\n  skipStartedAction?: boolean;\n}\n\nexport function bindAsyncAction<R>(\n  actionCreators: AsyncActionCreators<void, R, any>,\n  options?: BindAsyncActionOptions,\n): {\n  <Args extends any[]>(\n    worker: (params: void, ...args: Args) => Promise<R> | SagaIterator,\n  ): (params: void, ...args: Args) => SagaIterator;\n  (worker: () => Promise<R> | SagaIterator): () => SagaIterator;\n};\nexport function bindAsyncAction<P, R>(\n  actionCreators: AsyncActionCreators<P, R, any>,\n  options?: BindAsyncActionOptions,\n): {\n  <Args extends any[]>(\n    worker: (params: P, ...args: Args) => Promise<R> | SagaIterator,\n  ): (params: P, ...args: Args) => SagaIterator;\n};\n\nexport function bindAsyncAction(\n  actionCreator: AsyncActionCreators<any, any, any>,\n  options: BindAsyncActionOptions = {},\n) {\n  return (\n    worker: (params: any, ...args: any[]) => Promise<any> | SagaIterator,\n  ) => {\n    function* boundAsyncActionSaga(params: any, ...args: any[]): SagaIterator {\n      if (!options.skipStartedAction) {\n        yield put(actionCreator.started(params));\n      }\n\n      try {\n        const result = yield (call as any)(worker, params, ...args);\n        yield put(actionCreator.done({params, result}));\n        return result;\n      } catch (error) {\n        yield put(actionCreator.failed({params, error}));\n        throw error;\n      } finally {\n        if (yield cancelled()) {\n          yield put(actionCreator.failed({params, error: 'cancelled'}));\n        }\n      }\n    }\n\n    const capName =\n      worker.name.charAt(0).toUpperCase() + worker.name.substring(1);\n\n    return setFunctionName(\n      boundAsyncActionSaga,\n      `bound${capName}(${actionCreator.type})`,\n    );\n  };\n}\n\n/**\n * Set function name.\n *\n * Note that this won't have effect on built-in Chrome stack traces, although\n * useful for stack traces generated by `redux-saga`.\n */\nfunction setFunctionName<F extends Function>(func: F, name: string): F {\n  try {\n    Object.defineProperty(func, 'name', {\n      value: name,\n      configurable: true,\n    });\n  } catch (e) {\n    // ignore\n  }\n\n  return func;\n}\n"]},"metadata":{},"sourceType":"script"}